{"ast":null,"code":"const getMoveTranslate = direction => {\n  const value = '100%';\n  return {\n    left: \"translateX(-\".concat(value, \")\"),\n    right: \"translateX(\".concat(value, \")\"),\n    top: \"translateY(-\".concat(value, \")\"),\n    bottom: \"translateY(\".concat(value, \")\")\n  }[direction];\n};\nconst getEnterLeaveStyle = (startStyle, endStyle) => ({\n  '&-enter, &-appear': Object.assign(Object.assign({}, startStyle), {\n    '&-active': endStyle\n  }),\n  '&-leave': Object.assign(Object.assign({}, endStyle), {\n    '&-active': startStyle\n  })\n});\nconst getFadeStyle = (from, duration) => Object.assign({\n  '&-enter, &-appear, &-leave': {\n    '&-start': {\n      transition: 'none'\n    },\n    '&-active': {\n      transition: \"all \".concat(duration)\n    }\n  }\n}, getEnterLeaveStyle({\n  opacity: from\n}, {\n  opacity: 1\n}));\nconst getPanelMotionStyles = (direction, duration) => [getFadeStyle(0.7, duration), getEnterLeaveStyle({\n  transform: getMoveTranslate(direction)\n}, {\n  transform: 'none'\n})];\nconst genMotionStyle = token => {\n  const {\n    componentCls,\n    motionDurationSlow\n  } = token;\n  return {\n    [componentCls]: {\n      // ======================== Mask ========================\n      [\"\".concat(componentCls, \"-mask-motion\")]: getFadeStyle(0, motionDurationSlow),\n      // ======================= Panel ========================\n      [\"\".concat(componentCls, \"-panel-motion\")]: ['left', 'right', 'top', 'bottom'].reduce((obj, direction) => Object.assign(Object.assign({}, obj), {\n        [\"&-\".concat(direction)]: getPanelMotionStyles(direction, motionDurationSlow)\n      }), {})\n    }\n  };\n};\nexport default genMotionStyle;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}