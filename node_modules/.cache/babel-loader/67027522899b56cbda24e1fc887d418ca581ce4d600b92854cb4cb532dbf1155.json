{"ast":null,"code":"import { blue } from '@ant-design/colors';\nimport { unit } from '@ant-design/cssinjs';\nimport { clearFix, textEllipsis } from '../../style';\nconst genPictureStyle = token => {\n  const {\n    componentCls,\n    iconCls,\n    uploadThumbnailSize,\n    uploadProgressOffset,\n    calc\n  } = token;\n  const listCls = \"\".concat(componentCls, \"-list\");\n  const itemCls = \"\".concat(listCls, \"-item\");\n  return {\n    [\"\".concat(componentCls, \"-wrapper\")]: {\n      // ${listCls} 增加优先级\n      [\"\\n        \".concat(listCls).concat(listCls, \"-picture,\\n        \").concat(listCls).concat(listCls, \"-picture-card,\\n        \").concat(listCls).concat(listCls, \"-picture-circle\\n      \")]: {\n        [itemCls]: {\n          position: 'relative',\n          height: calc(uploadThumbnailSize).add(calc(token.lineWidth).mul(2)).add(calc(token.paddingXS).mul(2)).equal(),\n          padding: token.paddingXS,\n          border: \"\".concat(unit(token.lineWidth), \" \").concat(token.lineType, \" \").concat(token.colorBorder),\n          borderRadius: token.borderRadiusLG,\n          '&:hover': {\n            background: 'transparent'\n          },\n          [\"\".concat(itemCls, \"-thumbnail\")]: Object.assign(Object.assign({}, textEllipsis), {\n            width: uploadThumbnailSize,\n            height: uploadThumbnailSize,\n            lineHeight: unit(calc(uploadThumbnailSize).add(token.paddingSM).equal()),\n            textAlign: 'center',\n            flex: 'none',\n            [iconCls]: {\n              fontSize: token.fontSizeHeading2,\n              color: token.colorPrimary\n            },\n            img: {\n              display: 'block',\n              width: '100%',\n              height: '100%',\n              overflow: 'hidden'\n            }\n          }),\n          [\"\".concat(itemCls, \"-progress\")]: {\n            bottom: uploadProgressOffset,\n            width: \"calc(100% - \".concat(unit(calc(token.paddingSM).mul(2).equal()), \")\"),\n            marginTop: 0,\n            paddingInlineStart: calc(uploadThumbnailSize).add(token.paddingXS).equal()\n          }\n        },\n        [\"\".concat(itemCls, \"-error\")]: {\n          borderColor: token.colorError,\n          // Adjust the color of the error icon : https://github.com/ant-design/ant-design/pull/24160\n          [\"\".concat(itemCls, \"-thumbnail \").concat(iconCls)]: {\n            [\"svg path[fill='\".concat(blue[0], \"']\")]: {\n              fill: token.colorErrorBg\n            },\n            [\"svg path[fill='\".concat(blue.primary, \"']\")]: {\n              fill: token.colorError\n            }\n          }\n        },\n        [\"\".concat(itemCls, \"-uploading\")]: {\n          borderStyle: 'dashed',\n          [\"\".concat(itemCls, \"-name\")]: {\n            marginBottom: uploadProgressOffset\n          }\n        }\n      },\n      [\"\".concat(listCls).concat(listCls, \"-picture-circle \").concat(itemCls)]: {\n        [\"&, &::before, \".concat(itemCls, \"-thumbnail\")]: {\n          borderRadius: '50%'\n        }\n      }\n    }\n  };\n};\nconst genPictureCardStyle = token => {\n  const {\n    componentCls,\n    iconCls,\n    fontSizeLG,\n    colorTextLightSolid,\n    calc\n  } = token;\n  const listCls = \"\".concat(componentCls, \"-list\");\n  const itemCls = \"\".concat(listCls, \"-item\");\n  const uploadPictureCardSize = token.uploadPicCardSize;\n  return {\n    [\"\\n      \".concat(componentCls, \"-wrapper\").concat(componentCls, \"-picture-card-wrapper,\\n      \").concat(componentCls, \"-wrapper\").concat(componentCls, \"-picture-circle-wrapper\\n    \")]: Object.assign(Object.assign({}, clearFix()), {\n      display: 'block',\n      [\"\".concat(componentCls).concat(componentCls, \"-select\")]: {\n        width: uploadPictureCardSize,\n        height: uploadPictureCardSize,\n        textAlign: 'center',\n        verticalAlign: 'top',\n        backgroundColor: token.colorFillAlter,\n        border: \"\".concat(unit(token.lineWidth), \" dashed \").concat(token.colorBorder),\n        borderRadius: token.borderRadiusLG,\n        cursor: 'pointer',\n        transition: \"border-color \".concat(token.motionDurationSlow),\n        [\"> \".concat(componentCls)]: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: '100%',\n          textAlign: 'center'\n        },\n        [\"&:not(\".concat(componentCls, \"-disabled):hover\")]: {\n          borderColor: token.colorPrimary\n        }\n      },\n      // list\n      [\"\".concat(listCls).concat(listCls, \"-picture-card, \").concat(listCls).concat(listCls, \"-picture-circle\")]: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        '@supports not (gap: 1px)': {\n          '& > *': {\n            marginBlockEnd: token.marginXS,\n            marginInlineEnd: token.marginXS\n          }\n        },\n        '@supports (gap: 1px)': {\n          gap: token.marginXS\n        },\n        [\"\".concat(listCls, \"-item-container\")]: {\n          display: 'inline-block',\n          width: uploadPictureCardSize,\n          height: uploadPictureCardSize,\n          verticalAlign: 'top'\n        },\n        '&::after': {\n          display: 'none'\n        },\n        '&::before': {\n          display: 'none'\n        },\n        [itemCls]: {\n          height: '100%',\n          margin: 0,\n          '&::before': {\n            position: 'absolute',\n            zIndex: 1,\n            width: \"calc(100% - \".concat(unit(calc(token.paddingXS).mul(2).equal()), \")\"),\n            height: \"calc(100% - \".concat(unit(calc(token.paddingXS).mul(2).equal()), \")\"),\n            backgroundColor: token.colorBgMask,\n            opacity: 0,\n            transition: \"all \".concat(token.motionDurationSlow),\n            content: '\" \"'\n          }\n        },\n        [\"\".concat(itemCls, \":hover\")]: {\n          [\"&::before, \".concat(itemCls, \"-actions\")]: {\n            opacity: 1\n          }\n        },\n        [\"\".concat(itemCls, \"-actions\")]: {\n          position: 'absolute',\n          insetInlineStart: 0,\n          zIndex: 10,\n          width: '100%',\n          whiteSpace: 'nowrap',\n          textAlign: 'center',\n          opacity: 0,\n          transition: \"all \".concat(token.motionDurationSlow),\n          [\"\\n            \".concat(iconCls, \"-eye,\\n            \").concat(iconCls, \"-download,\\n            \").concat(iconCls, \"-delete\\n          \")]: {\n            zIndex: 10,\n            width: fontSizeLG,\n            margin: \"0 \".concat(unit(token.marginXXS)),\n            fontSize: fontSizeLG,\n            cursor: 'pointer',\n            transition: \"all \".concat(token.motionDurationSlow),\n            color: colorTextLightSolid,\n            '&:hover': {\n              color: colorTextLightSolid\n            },\n            svg: {\n              verticalAlign: 'baseline'\n            }\n          }\n        },\n        [\"\".concat(itemCls, \"-thumbnail, \").concat(itemCls, \"-thumbnail img\")]: {\n          position: 'static',\n          display: 'block',\n          width: '100%',\n          height: '100%',\n          objectFit: 'contain'\n        },\n        [\"\".concat(itemCls, \"-name\")]: {\n          display: 'none',\n          textAlign: 'center'\n        },\n        [\"\".concat(itemCls, \"-file + \").concat(itemCls, \"-name\")]: {\n          position: 'absolute',\n          bottom: token.margin,\n          display: 'block',\n          width: \"calc(100% - \".concat(unit(calc(token.paddingXS).mul(2).equal()), \")\")\n        },\n        [\"\".concat(itemCls, \"-uploading\")]: {\n          [\"&\".concat(itemCls)]: {\n            backgroundColor: token.colorFillAlter\n          },\n          [\"&::before, \".concat(iconCls, \"-eye, \").concat(iconCls, \"-download, \").concat(iconCls, \"-delete\")]: {\n            display: 'none'\n          }\n        },\n        [\"\".concat(itemCls, \"-progress\")]: {\n          bottom: token.marginXL,\n          width: \"calc(100% - \".concat(unit(calc(token.paddingXS).mul(2).equal()), \")\"),\n          paddingInlineStart: 0\n        }\n      }\n    }),\n    [\"\".concat(componentCls, \"-wrapper\").concat(componentCls, \"-picture-circle-wrapper\")]: {\n      [\"\".concat(componentCls).concat(componentCls, \"-select\")]: {\n        borderRadius: '50%'\n      }\n    }\n  };\n};\nexport { genPictureStyle, genPictureCardStyle };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}