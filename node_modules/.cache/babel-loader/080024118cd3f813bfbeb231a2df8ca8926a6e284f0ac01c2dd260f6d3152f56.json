{"ast":null,"code":"import { Keyframes } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nconst antSpinMove = new Keyframes('antSpinMove', {\n  to: {\n    opacity: 1\n  }\n});\nconst antRotate = new Keyframes('antRotate', {\n  to: {\n    transform: 'rotate(405deg)'\n  }\n});\nconst genSpinStyle = token => {\n  const {\n    componentCls,\n    calc\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'absolute',\n      display: 'none',\n      color: token.colorPrimary,\n      fontSize: 0,\n      textAlign: 'center',\n      verticalAlign: 'middle',\n      opacity: 0,\n      transition: \"transform \".concat(token.motionDurationSlow, \" \").concat(token.motionEaseInOutCirc),\n      '&-spinning': {\n        position: 'relative',\n        display: 'inline-block',\n        opacity: 1\n      },\n      [\"\".concat(componentCls, \"-text\")]: {\n        fontSize: token.fontSize,\n        paddingTop: calc(calc(token.dotSize).sub(token.fontSize)).div(2).add(2).equal()\n      },\n      '&-fullscreen': {\n        position: 'fixed',\n        width: '100vw',\n        height: '100vh',\n        backgroundColor: token.colorBgMask,\n        zIndex: token.zIndexPopupBase,\n        inset: 0,\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        opacity: 0,\n        visibility: 'hidden',\n        transition: \"all \".concat(token.motionDurationMid),\n        '&-show': {\n          opacity: 1,\n          visibility: 'visible'\n        },\n        [componentCls]: {\n          [\"\".concat(componentCls, \"-dot-holder\")]: {\n            color: token.colorWhite\n          },\n          [\"\".concat(componentCls, \"-text\")]: {\n            color: token.colorTextLightSolid\n          }\n        }\n      },\n      '&-nested-loading': {\n        position: 'relative',\n        [\"> div > \".concat(componentCls)]: {\n          position: 'absolute',\n          top: 0,\n          insetInlineStart: 0,\n          zIndex: 4,\n          display: 'block',\n          width: '100%',\n          height: '100%',\n          maxHeight: token.contentHeight,\n          [\"\".concat(componentCls, \"-dot\")]: {\n            position: 'absolute',\n            top: '50%',\n            insetInlineStart: '50%',\n            margin: calc(token.dotSize).mul(-1).div(2).equal()\n          },\n          [\"\".concat(componentCls, \"-text\")]: {\n            position: 'absolute',\n            top: '50%',\n            width: '100%',\n            textShadow: \"0 1px 2px \".concat(token.colorBgContainer) // FIXME: shadow\n          },\n          [\"&\".concat(componentCls, \"-show-text \").concat(componentCls, \"-dot\")]: {\n            marginTop: calc(token.dotSize).div(2).mul(-1).sub(10).equal()\n          },\n          '&-sm': {\n            [\"\".concat(componentCls, \"-dot\")]: {\n              margin: calc(token.dotSizeSM).mul(-1).div(2).equal()\n            },\n            [\"\".concat(componentCls, \"-text\")]: {\n              paddingTop: calc(calc(token.dotSizeSM).sub(token.fontSize)).div(2).add(2).equal()\n            },\n            [\"&\".concat(componentCls, \"-show-text \").concat(componentCls, \"-dot\")]: {\n              marginTop: calc(token.dotSizeSM).div(2).mul(-1).sub(10).equal()\n            }\n          },\n          '&-lg': {\n            [\"\".concat(componentCls, \"-dot\")]: {\n              margin: calc(token.dotSizeLG).mul(-1).div(2).equal()\n            },\n            [\"\".concat(componentCls, \"-text\")]: {\n              paddingTop: calc(calc(token.dotSizeLG).sub(token.fontSize)).div(2).add(2).equal()\n            },\n            [\"&\".concat(componentCls, \"-show-text \").concat(componentCls, \"-dot\")]: {\n              marginTop: calc(token.dotSizeLG).div(2).mul(-1).sub(10).equal()\n            }\n          }\n        },\n        [\"\".concat(componentCls, \"-container\")]: {\n          position: 'relative',\n          transition: \"opacity \".concat(token.motionDurationSlow),\n          '&::after': {\n            position: 'absolute',\n            top: 0,\n            insetInlineEnd: 0,\n            bottom: 0,\n            insetInlineStart: 0,\n            zIndex: 10,\n            width: '100%',\n            height: '100%',\n            background: token.colorBgContainer,\n            opacity: 0,\n            transition: \"all \".concat(token.motionDurationSlow),\n            content: '\"\"',\n            pointerEvents: 'none'\n          }\n        },\n        [\"\".concat(componentCls, \"-blur\")]: {\n          clear: 'both',\n          opacity: 0.5,\n          userSelect: 'none',\n          pointerEvents: 'none',\n          '&::after': {\n            opacity: 0.4,\n            pointerEvents: 'auto'\n          }\n        }\n      },\n      // tip\n      // ------------------------------\n      '&-tip': {\n        color: token.spinDotDefault\n      },\n      // holder\n      // ------------------------------\n      [\"\".concat(componentCls, \"-dot-holder\")]: {\n        width: '1em',\n        height: '1em',\n        fontSize: token.dotSize,\n        display: 'inline-block',\n        transition: \"transform \".concat(token.motionDurationSlow, \" ease, opacity \").concat(token.motionDurationSlow, \" ease\"),\n        transformOrigin: '50% 50%',\n        lineHeight: 1,\n        color: token.colorPrimary,\n        '&-hidden': {\n          transform: 'scale(0.3)',\n          opacity: 0\n        }\n      },\n      // progress\n      // ------------------------------\n      [\"\".concat(componentCls, \"-dot-progress\")]: {\n        position: 'absolute',\n        top: '50%',\n        transform: 'translate(-50%, -50%)',\n        insetInlineStart: '50%'\n      },\n      // dots\n      // ------------------------------\n      [\"\".concat(componentCls, \"-dot\")]: {\n        position: 'relative',\n        display: 'inline-block',\n        fontSize: token.dotSize,\n        width: '1em',\n        height: '1em',\n        '&-item': {\n          position: 'absolute',\n          display: 'block',\n          width: calc(token.dotSize).sub(calc(token.marginXXS).div(2)).div(2).equal(),\n          height: calc(token.dotSize).sub(calc(token.marginXXS).div(2)).div(2).equal(),\n          background: 'currentColor',\n          borderRadius: '100%',\n          transform: 'scale(0.75)',\n          transformOrigin: '50% 50%',\n          opacity: 0.3,\n          animationName: antSpinMove,\n          animationDuration: '1s',\n          animationIterationCount: 'infinite',\n          animationTimingFunction: 'linear',\n          animationDirection: 'alternate',\n          '&:nth-child(1)': {\n            top: 0,\n            insetInlineStart: 0,\n            animationDelay: '0s'\n          },\n          '&:nth-child(2)': {\n            top: 0,\n            insetInlineEnd: 0,\n            animationDelay: '0.4s'\n          },\n          '&:nth-child(3)': {\n            insetInlineEnd: 0,\n            bottom: 0,\n            animationDelay: '0.8s'\n          },\n          '&:nth-child(4)': {\n            bottom: 0,\n            insetInlineStart: 0,\n            animationDelay: '1.2s'\n          }\n        },\n        '&-spin': {\n          transform: 'rotate(45deg)',\n          animationName: antRotate,\n          animationDuration: '1.2s',\n          animationIterationCount: 'infinite',\n          animationTimingFunction: 'linear'\n        },\n        '&-circle': {\n          strokeLinecap: 'round',\n          transition: ['stroke-dashoffset', 'stroke-dasharray', 'stroke', 'stroke-width', 'opacity'].map(item => \"\".concat(item, \" \").concat(token.motionDurationSlow, \" ease\")).join(','),\n          fillOpacity: 0,\n          stroke: 'currentcolor'\n        },\n        '&-circle-bg': {\n          stroke: token.colorFillSecondary\n        }\n      },\n      // small\n      [\"&-sm \".concat(componentCls, \"-dot\")]: {\n        '&, &-holder': {\n          fontSize: token.dotSizeSM\n        }\n      },\n      [\"&-sm \".concat(componentCls, \"-dot-holder\")]: {\n        i: {\n          width: calc(calc(token.dotSizeSM).sub(calc(token.marginXXS).div(2))).div(2).equal(),\n          height: calc(calc(token.dotSizeSM).sub(calc(token.marginXXS).div(2))).div(2).equal()\n        }\n      },\n      // large\n      [\"&-lg \".concat(componentCls, \"-dot\")]: {\n        '&, &-holder': {\n          fontSize: token.dotSizeLG\n        }\n      },\n      [\"&-lg \".concat(componentCls, \"-dot-holder\")]: {\n        i: {\n          width: calc(calc(token.dotSizeLG).sub(token.marginXXS)).div(2).equal(),\n          height: calc(calc(token.dotSizeLG).sub(token.marginXXS)).div(2).equal()\n        }\n      },\n      [\"&\".concat(componentCls, \"-show-text \").concat(componentCls, \"-text\")]: {\n        display: 'block'\n      }\n    })\n  };\n};\nexport const prepareComponentToken = token => {\n  const {\n    controlHeightLG,\n    controlHeight\n  } = token;\n  return {\n    contentHeight: 400,\n    dotSize: controlHeightLG / 2,\n    dotSizeSM: controlHeightLG * 0.35,\n    dotSizeLG: controlHeight\n  };\n};\n// ============================== Export ==============================\nexport default genStyleHooks('Spin', token => {\n  const spinToken = mergeToken(token, {\n    spinDotDefault: token.colorTextDescription\n  });\n  return [genSpinStyle(spinToken)];\n}, prepareComponentToken);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}