{"ast":null,"code":"import { unit } from '@ant-design/cssinjs';\nimport { resetComponent, resetIcon } from '../../style';\nimport { genCollapseMotion } from '../../style/motion';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nexport const genBaseStyle = token => {\n  const {\n    componentCls,\n    contentBg,\n    padding,\n    headerBg,\n    headerPadding,\n    collapseHeaderPaddingSM,\n    collapseHeaderPaddingLG,\n    collapsePanelBorderRadius,\n    lineWidth,\n    lineType,\n    colorBorder,\n    colorText,\n    colorTextHeading,\n    colorTextDisabled,\n    fontSizeLG,\n    lineHeight,\n    lineHeightLG,\n    marginSM,\n    paddingSM,\n    paddingLG,\n    paddingXS,\n    motionDurationSlow,\n    fontSizeIcon,\n    contentPadding,\n    fontHeight,\n    fontHeightLG\n  } = token;\n  const borderBase = \"\".concat(unit(lineWidth), \" \").concat(lineType, \" \").concat(colorBorder);\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      backgroundColor: headerBg,\n      border: borderBase,\n      borderRadius: collapsePanelBorderRadius,\n      '&-rtl': {\n        direction: 'rtl'\n      },\n      [\"& > \".concat(componentCls, \"-item\")]: {\n        borderBottom: borderBase,\n        '&:last-child': {\n          [\"\\n            &,\\n            & > \".concat(componentCls, \"-header\")]: {\n            borderRadius: \"0 0 \".concat(unit(collapsePanelBorderRadius), \" \").concat(unit(collapsePanelBorderRadius))\n          }\n        },\n        [\"> \".concat(componentCls, \"-header\")]: {\n          position: 'relative',\n          // Compatible with old version of antd, should remove in next version\n          display: 'flex',\n          flexWrap: 'nowrap',\n          alignItems: 'flex-start',\n          padding: headerPadding,\n          color: colorTextHeading,\n          lineHeight,\n          cursor: 'pointer',\n          transition: \"all \".concat(motionDurationSlow, \", visibility 0s\"),\n          [\"> \".concat(componentCls, \"-header-text\")]: {\n            flex: 'auto'\n          },\n          // >>>>> Arrow\n          [\"\".concat(componentCls, \"-expand-icon\")]: {\n            height: fontHeight,\n            display: 'flex',\n            alignItems: 'center',\n            paddingInlineEnd: marginSM\n          },\n          [\"\".concat(componentCls, \"-arrow\")]: Object.assign(Object.assign({}, resetIcon()), {\n            fontSize: fontSizeIcon,\n            // when `transform: rotate()` is applied to icon's root element\n            transition: \"transform \".concat(motionDurationSlow),\n            // when `transform: rotate()` is applied to icon's child element\n            svg: {\n              transition: \"transform \".concat(motionDurationSlow)\n            }\n          }),\n          // >>>>> Text\n          [\"\".concat(componentCls, \"-header-text\")]: {\n            marginInlineEnd: 'auto'\n          }\n        },\n        [\"\".concat(componentCls, \"-collapsible-header\")]: {\n          cursor: 'default',\n          [\"\".concat(componentCls, \"-header-text\")]: {\n            flex: 'none',\n            cursor: 'pointer'\n          }\n        },\n        [\"\".concat(componentCls, \"-collapsible-icon\")]: {\n          cursor: 'unset',\n          [\"\".concat(componentCls, \"-expand-icon\")]: {\n            cursor: 'pointer'\n          }\n        }\n      },\n      [\"\".concat(componentCls, \"-content\")]: {\n        color: colorText,\n        backgroundColor: contentBg,\n        borderTop: borderBase,\n        [\"& > \".concat(componentCls, \"-content-box\")]: {\n          padding: contentPadding\n        },\n        '&-hidden': {\n          display: 'none'\n        }\n      },\n      '&-small': {\n        [\"> \".concat(componentCls, \"-item\")]: {\n          [\"> \".concat(componentCls, \"-header\")]: {\n            padding: collapseHeaderPaddingSM,\n            paddingInlineStart: paddingXS,\n            [\"> \".concat(componentCls, \"-expand-icon\")]: {\n              // Arrow offset\n              marginInlineStart: token.calc(paddingSM).sub(paddingXS).equal()\n            }\n          },\n          [\"> \".concat(componentCls, \"-content > \").concat(componentCls, \"-content-box\")]: {\n            padding: paddingSM\n          }\n        }\n      },\n      '&-large': {\n        [\"> \".concat(componentCls, \"-item\")]: {\n          fontSize: fontSizeLG,\n          lineHeight: lineHeightLG,\n          [\"> \".concat(componentCls, \"-header\")]: {\n            padding: collapseHeaderPaddingLG,\n            paddingInlineStart: padding,\n            [\"> \".concat(componentCls, \"-expand-icon\")]: {\n              height: fontHeightLG,\n              // Arrow offset\n              marginInlineStart: token.calc(paddingLG).sub(padding).equal()\n            }\n          },\n          [\"> \".concat(componentCls, \"-content > \").concat(componentCls, \"-content-box\")]: {\n            padding: paddingLG\n          }\n        }\n      },\n      [\"\".concat(componentCls, \"-item:last-child\")]: {\n        borderBottom: 0,\n        [\"> \".concat(componentCls, \"-content\")]: {\n          borderRadius: \"0 0 \".concat(unit(collapsePanelBorderRadius), \" \").concat(unit(collapsePanelBorderRadius))\n        }\n      },\n      [\"& \".concat(componentCls, \"-item-disabled > \").concat(componentCls, \"-header\")]: {\n        [\"\\n          &,\\n          & > .arrow\\n        \"]: {\n          color: colorTextDisabled,\n          cursor: 'not-allowed'\n        }\n      },\n      // ========================== Icon Position ==========================\n      [\"&\".concat(componentCls, \"-icon-position-end\")]: {\n        [\"& > \".concat(componentCls, \"-item\")]: {\n          [\"> \".concat(componentCls, \"-header\")]: {\n            [\"\".concat(componentCls, \"-expand-icon\")]: {\n              order: 1,\n              paddingInlineEnd: 0,\n              paddingInlineStart: marginSM\n            }\n          }\n        }\n      }\n    })\n  };\n};\nconst genArrowStyle = token => {\n  const {\n    componentCls\n  } = token;\n  const fixedSelector = \"> \".concat(componentCls, \"-item > \").concat(componentCls, \"-header \").concat(componentCls, \"-arrow\");\n  return {\n    [\"\".concat(componentCls, \"-rtl\")]: {\n      [fixedSelector]: {\n        transform: \"rotate(180deg)\"\n      }\n    }\n  };\n};\nconst genBorderlessStyle = token => {\n  const {\n    componentCls,\n    headerBg,\n    paddingXXS,\n    colorBorder\n  } = token;\n  return {\n    [\"\".concat(componentCls, \"-borderless\")]: {\n      backgroundColor: headerBg,\n      border: 0,\n      [\"> \".concat(componentCls, \"-item\")]: {\n        borderBottom: \"1px solid \".concat(colorBorder)\n      },\n      [\"\\n        > \".concat(componentCls, \"-item:last-child,\\n        > \").concat(componentCls, \"-item:last-child \").concat(componentCls, \"-header\\n      \")]: {\n        borderRadius: 0\n      },\n      [\"> \".concat(componentCls, \"-item:last-child\")]: {\n        borderBottom: 0\n      },\n      [\"> \".concat(componentCls, \"-item > \").concat(componentCls, \"-content\")]: {\n        backgroundColor: 'transparent',\n        borderTop: 0\n      },\n      [\"> \".concat(componentCls, \"-item > \").concat(componentCls, \"-content > \").concat(componentCls, \"-content-box\")]: {\n        paddingTop: paddingXXS\n      }\n    }\n  };\n};\nconst genGhostStyle = token => {\n  const {\n    componentCls,\n    paddingSM\n  } = token;\n  return {\n    [\"\".concat(componentCls, \"-ghost\")]: {\n      backgroundColor: 'transparent',\n      border: 0,\n      [\"> \".concat(componentCls, \"-item\")]: {\n        borderBottom: 0,\n        [\"> \".concat(componentCls, \"-content\")]: {\n          backgroundColor: 'transparent',\n          border: 0,\n          [\"> \".concat(componentCls, \"-content-box\")]: {\n            paddingBlock: paddingSM\n          }\n        }\n      }\n    }\n  };\n};\nexport const prepareComponentToken = token => ({\n  headerPadding: \"\".concat(token.paddingSM, \"px \").concat(token.padding, \"px\"),\n  headerBg: token.colorFillAlter,\n  contentPadding: \"\".concat(token.padding, \"px 16px\"),\n  // Fixed Value\n  contentBg: token.colorBgContainer\n});\nexport default genStyleHooks('Collapse', token => {\n  const collapseToken = mergeToken(token, {\n    collapseHeaderPaddingSM: \"\".concat(unit(token.paddingXS), \" \").concat(unit(token.paddingSM)),\n    collapseHeaderPaddingLG: \"\".concat(unit(token.padding), \" \").concat(unit(token.paddingLG)),\n    collapsePanelBorderRadius: token.borderRadiusLG\n  });\n  return [genBaseStyle(collapseToken), genBorderlessStyle(collapseToken), genGhostStyle(collapseToken), genArrowStyle(collapseToken), genCollapseMotion(collapseToken)];\n}, prepareComponentToken);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}