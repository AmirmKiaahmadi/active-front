{"ast":null,"code":"/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to translate URLs into\n * the corresponding cache key, based on the current revision info.\n *\n * @private\n */\nclass PrecacheCacheKeyPlugin {\n  constructor(_ref) {\n    let {\n      precacheController\n    } = _ref;\n    this.cacheKeyWillBeUsed = async _ref2 => {\n      let {\n        request,\n        params\n      } = _ref2;\n      // Params is type any, can't change right now.\n      /* eslint-disable */\n      const cacheKey = (params === null || params === void 0 ? void 0 : params.cacheKey) || this._precacheController.getCacheKeyForURL(request.url);\n      /* eslint-enable */\n      return cacheKey ? new Request(cacheKey, {\n        headers: request.headers\n      }) : request;\n    };\n    this._precacheController = precacheController;\n  }\n}\nexport { PrecacheCacheKeyPlugin };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}