{"ast":null,"code":"import { unit } from '@ant-design/cssinjs';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\n// ============================== Styles ==============================\nconst genBaseStyle = token => {\n  const {\n    componentCls,\n    lineHeightHeading3,\n    iconCls,\n    padding,\n    paddingXL,\n    paddingXS,\n    paddingLG,\n    marginXS,\n    lineHeight\n  } = token;\n  return {\n    // Result\n    [componentCls]: {\n      padding: \"\".concat(unit(token.calc(paddingLG).mul(2).equal()), \" \").concat(unit(paddingXL)),\n      // RTL\n      '&-rtl': {\n        direction: 'rtl'\n      }\n    },\n    // Exception Status image\n    [\"\".concat(componentCls, \" \").concat(componentCls, \"-image\")]: {\n      width: token.imageWidth,\n      height: token.imageHeight,\n      margin: 'auto'\n    },\n    [\"\".concat(componentCls, \" \").concat(componentCls, \"-icon\")]: {\n      marginBottom: paddingLG,\n      textAlign: 'center',\n      [\"& > \".concat(iconCls)]: {\n        fontSize: token.iconFontSize\n      }\n    },\n    [\"\".concat(componentCls, \" \").concat(componentCls, \"-title\")]: {\n      color: token.colorTextHeading,\n      fontSize: token.titleFontSize,\n      lineHeight: lineHeightHeading3,\n      marginBlock: marginXS,\n      textAlign: 'center'\n    },\n    [\"\".concat(componentCls, \" \").concat(componentCls, \"-subtitle\")]: {\n      color: token.colorTextDescription,\n      fontSize: token.subtitleFontSize,\n      lineHeight,\n      textAlign: 'center'\n    },\n    [\"\".concat(componentCls, \" \").concat(componentCls, \"-content\")]: {\n      marginTop: paddingLG,\n      padding: \"\".concat(unit(paddingLG), \" \").concat(unit(token.calc(padding).mul(2.5).equal())),\n      backgroundColor: token.colorFillAlter\n    },\n    [\"\".concat(componentCls, \" \").concat(componentCls, \"-extra\")]: {\n      margin: token.extraMargin,\n      textAlign: 'center',\n      '& > *': {\n        marginInlineEnd: paddingXS,\n        '&:last-child': {\n          marginInlineEnd: 0\n        }\n      }\n    }\n  };\n};\nconst genStatusIconStyle = token => {\n  const {\n    componentCls,\n    iconCls\n  } = token;\n  return {\n    [\"\".concat(componentCls, \"-success \").concat(componentCls, \"-icon > \").concat(iconCls)]: {\n      color: token.resultSuccessIconColor\n    },\n    [\"\".concat(componentCls, \"-error \").concat(componentCls, \"-icon > \").concat(iconCls)]: {\n      color: token.resultErrorIconColor\n    },\n    [\"\".concat(componentCls, \"-info \").concat(componentCls, \"-icon > \").concat(iconCls)]: {\n      color: token.resultInfoIconColor\n    },\n    [\"\".concat(componentCls, \"-warning \").concat(componentCls, \"-icon > \").concat(iconCls)]: {\n      color: token.resultWarningIconColor\n    }\n  };\n};\nconst genResultStyle = token => [genBaseStyle(token), genStatusIconStyle(token)];\nconst getStyle = token => genResultStyle(token);\n// ============================== Export ==============================\nexport const prepareComponentToken = token => ({\n  titleFontSize: token.fontSizeHeading3,\n  subtitleFontSize: token.fontSize,\n  iconFontSize: token.fontSizeHeading3 * 3,\n  extraMargin: \"\".concat(token.paddingLG, \"px 0 0 0\")\n});\nexport default genStyleHooks('Result', token => {\n  const resultInfoIconColor = token.colorInfo;\n  const resultErrorIconColor = token.colorError;\n  const resultSuccessIconColor = token.colorSuccess;\n  const resultWarningIconColor = token.colorWarning;\n  const resultToken = mergeToken(token, {\n    resultInfoIconColor,\n    resultErrorIconColor,\n    resultSuccessIconColor,\n    resultWarningIconColor,\n    imageWidth: 250,\n    imageHeight: 295\n  });\n  return [getStyle(resultToken)];\n}, prepareComponentToken);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}