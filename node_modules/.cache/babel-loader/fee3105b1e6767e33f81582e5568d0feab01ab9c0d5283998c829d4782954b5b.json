{"ast":null,"code":"import { unit } from '@ant-design/cssinjs';\nimport { textEllipsis } from '../../style';\nconst getVerticalInlineStyle = token => {\n  const {\n    componentCls,\n    itemHeight,\n    itemMarginInline,\n    padding,\n    menuArrowSize,\n    marginXS,\n    itemMarginBlock,\n    itemWidth,\n    itemPaddingInline\n  } = token;\n  const paddingWithArrow = token.calc(menuArrowSize).add(padding).add(marginXS).equal();\n  return {\n    [\"\".concat(componentCls, \"-item\")]: {\n      position: 'relative',\n      overflow: 'hidden'\n    },\n    [\"\".concat(componentCls, \"-item, \").concat(componentCls, \"-submenu-title\")]: {\n      height: itemHeight,\n      lineHeight: unit(itemHeight),\n      paddingInline: itemPaddingInline,\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      marginInline: itemMarginInline,\n      marginBlock: itemMarginBlock,\n      width: itemWidth\n    },\n    [\"> \".concat(componentCls, \"-item,\\n            > \").concat(componentCls, \"-submenu > \").concat(componentCls, \"-submenu-title\")]: {\n      height: itemHeight,\n      lineHeight: unit(itemHeight)\n    },\n    [\"\".concat(componentCls, \"-item-group-list \").concat(componentCls, \"-submenu-title,\\n            \").concat(componentCls, \"-submenu-title\")]: {\n      paddingInlineEnd: paddingWithArrow\n    }\n  };\n};\nconst getVerticalStyle = token => {\n  const {\n    componentCls,\n    iconCls,\n    itemHeight,\n    colorTextLightSolid,\n    dropdownWidth,\n    controlHeightLG,\n    motionEaseOut,\n    paddingXL,\n    itemMarginInline,\n    fontSizeLG,\n    motionDurationFast,\n    motionDurationSlow,\n    paddingXS,\n    boxShadowSecondary,\n    collapsedWidth,\n    collapsedIconSize\n  } = token;\n  const inlineItemStyle = {\n    height: itemHeight,\n    lineHeight: unit(itemHeight),\n    listStylePosition: 'inside',\n    listStyleType: 'disc'\n  };\n  return [{\n    [componentCls]: {\n      '&-inline, &-vertical': Object.assign({\n        [\"&\".concat(componentCls, \"-root\")]: {\n          boxShadow: 'none'\n        }\n      }, getVerticalInlineStyle(token))\n    },\n    [\"\".concat(componentCls, \"-submenu-popup\")]: {\n      [\"\".concat(componentCls, \"-vertical\")]: Object.assign(Object.assign({}, getVerticalInlineStyle(token)), {\n        boxShadow: boxShadowSecondary\n      })\n    }\n  },\n  // Vertical only\n  {\n    [\"\".concat(componentCls, \"-submenu-popup \").concat(componentCls, \"-vertical\").concat(componentCls, \"-sub\")]: {\n      minWidth: dropdownWidth,\n      maxHeight: \"calc(100vh - \".concat(unit(token.calc(controlHeightLG).mul(2.5).equal()), \")\"),\n      padding: '0',\n      overflow: 'hidden',\n      borderInlineEnd: 0,\n      // https://github.com/ant-design/ant-design/issues/22244\n      // https://github.com/ant-design/ant-design/issues/26812\n      \"&:not([class*='-active'])\": {\n        overflowX: 'hidden',\n        overflowY: 'auto'\n      }\n    }\n  },\n  // Inline Only\n  {\n    [\"\".concat(componentCls, \"-inline\")]: {\n      width: '100%',\n      // Motion enhance for first level\n      [\"&\".concat(componentCls, \"-root\")]: {\n        [\"\".concat(componentCls, \"-item, \").concat(componentCls, \"-submenu-title\")]: {\n          display: 'flex',\n          alignItems: 'center',\n          transition: [\"border-color \".concat(motionDurationSlow), \"background \".concat(motionDurationSlow), \"padding \".concat(motionDurationFast, \" \").concat(motionEaseOut)].join(','),\n          [\"> \".concat(componentCls, \"-title-content\")]: {\n            flex: 'auto',\n            minWidth: 0,\n            overflow: 'hidden',\n            textOverflow: 'ellipsis'\n          },\n          '> *': {\n            flex: 'none'\n          }\n        }\n      },\n      // >>>>> Sub\n      [\"\".concat(componentCls, \"-sub\").concat(componentCls, \"-inline\")]: {\n        padding: 0,\n        border: 0,\n        borderRadius: 0,\n        boxShadow: 'none',\n        [\"& > \".concat(componentCls, \"-submenu > \").concat(componentCls, \"-submenu-title\")]: inlineItemStyle,\n        [\"& \".concat(componentCls, \"-item-group-title\")]: {\n          paddingInlineStart: paddingXL\n        }\n      },\n      // >>>>> Item\n      [\"\".concat(componentCls, \"-item\")]: inlineItemStyle\n    }\n  },\n  // Inline Collapse Only\n  {\n    [\"\".concat(componentCls, \"-inline-collapsed\")]: {\n      width: collapsedWidth,\n      [\"&\".concat(componentCls, \"-root\")]: {\n        [\"\".concat(componentCls, \"-item, \").concat(componentCls, \"-submenu \").concat(componentCls, \"-submenu-title\")]: {\n          [\"> \".concat(componentCls, \"-inline-collapsed-noicon\")]: {\n            fontSize: fontSizeLG,\n            textAlign: 'center'\n          }\n        }\n      },\n      [\"> \".concat(componentCls, \"-item,\\n          > \").concat(componentCls, \"-item-group > \").concat(componentCls, \"-item-group-list > \").concat(componentCls, \"-item,\\n          > \").concat(componentCls, \"-item-group > \").concat(componentCls, \"-item-group-list > \").concat(componentCls, \"-submenu > \").concat(componentCls, \"-submenu-title,\\n          > \").concat(componentCls, \"-submenu > \").concat(componentCls, \"-submenu-title\")]: {\n        insetInlineStart: 0,\n        paddingInline: \"calc(50% - \".concat(unit(token.calc(collapsedIconSize).div(2).equal()), \" - \").concat(unit(itemMarginInline), \")\"),\n        textOverflow: 'clip',\n        [\"\\n            \".concat(componentCls, \"-submenu-arrow,\\n            \").concat(componentCls, \"-submenu-expand-icon\\n          \")]: {\n          opacity: 0\n        },\n        [\"\".concat(componentCls, \"-item-icon, \").concat(iconCls)]: {\n          margin: 0,\n          fontSize: collapsedIconSize,\n          lineHeight: unit(itemHeight),\n          '+ span': {\n            display: 'inline-block',\n            opacity: 0\n          }\n        }\n      },\n      [\"\".concat(componentCls, \"-item-icon, \").concat(iconCls)]: {\n        display: 'inline-block'\n      },\n      '&-tooltip': {\n        pointerEvents: 'none',\n        [\"\".concat(componentCls, \"-item-icon, \").concat(iconCls)]: {\n          display: 'none'\n        },\n        'a, a:hover': {\n          color: colorTextLightSolid\n        }\n      },\n      [\"\".concat(componentCls, \"-item-group-title\")]: Object.assign(Object.assign({}, textEllipsis), {\n        paddingInline: paddingXS\n      })\n    }\n  }];\n};\nexport default getVerticalStyle;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}