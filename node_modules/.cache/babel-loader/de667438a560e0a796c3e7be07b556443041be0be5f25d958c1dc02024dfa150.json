{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useQuery } from '@tanstack/react-query';\nimport { useEffect, useState } from 'react';\nimport { getBaseProduct } from 'services/onSite';\nimport { queryKeyEnum } from 'utilities/enum';\nexport default function useGetBaseProduct() {\n  _s();\n  const [baseProducts, setBaseProducts] = useState([]);\n  const {\n    data,\n    isLoading\n  } = useQuery({\n    queryKey: [queryKeyEnum.GET_ALL_BASE_PRODUCTS],\n    queryFn: getBaseProduct\n  });\n  useEffect(() => {\n    if (data) {\n      const baseProductDto = [];\n      data.map(item => baseProductDto.push({\n        ...item,\n        isSelected: false\n      }));\n      setBaseProducts(baseProductDto);\n    }\n  }, [data]);\n  const handleSelectBaseProduct = uuid => {\n    const baseProductDto = [];\n    baseProducts.map(item => {\n      if (item.base_uuid === uuid) {\n        baseProductDto.push({\n          ...item,\n          isSelected: !item.isSelected\n        });\n      } else {\n        baseProductDto.push(item);\n      }\n    });\n    setBaseProducts(baseProductDto);\n  };\n  return {\n    baseProducts,\n    isLoading,\n    handleSelectBaseProduct\n  };\n}\n_s(useGetBaseProduct, \"HS2DlApoxzzuJDokFHeALQeddcs=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["useQuery","useEffect","useState","getBaseProduct","queryKeyEnum","useGetBaseProduct","_s","baseProducts","setBaseProducts","data","isLoading","queryKey","GET_ALL_BASE_PRODUCTS","queryFn","baseProductDto","map","item","push","isSelected","handleSelectBaseProduct","uuid","base_uuid"],"sources":["/Users/amirkia/Documents/active-front/src/pages/onSite/home/hooks/useGetBaseProduct.ts"],"sourcesContent":["import { useQuery } from '@tanstack/react-query';\nimport React, { useEffect, useState } from 'react';\nimport { getBaseProduct } from 'services/onSite';\nimport { IBaseProduct } from 'services/onSite/interface';\nimport { queryKeyEnum } from 'utilities/enum';\n\nexport interface IBaseProductDTO extends IBaseProduct {\n\tisSelected: boolean;\n}\n\nexport default function useGetBaseProduct() {\n\tconst [baseProducts, setBaseProducts] = useState<IBaseProductDTO[]>([]);\n\tconst { data, isLoading } = useQuery({\n\t\tqueryKey: [queryKeyEnum.GET_ALL_BASE_PRODUCTS],\n\t\tqueryFn: getBaseProduct,\n\t});\n\n\tuseEffect(() => {\n\t\tif (data) {\n\t\t\tconst baseProductDto: IBaseProductDTO[] = [];\n\t\t\tdata.map((item) => baseProductDto.push({ ...item, isSelected: false }));\n\t\t\tsetBaseProducts(baseProductDto);\n\t\t}\n\t}, [data]);\n\n\tconst handleSelectBaseProduct = (uuid: string) => {\n\t\tconst baseProductDto: IBaseProductDTO[] = [];\n\t\tbaseProducts.map((item) => {\n\t\t\tif (item.base_uuid === uuid) {\n\t\t\t\tbaseProductDto.push({ ...item, isSelected: !item.isSelected });\n\t\t\t} else {\n\t\t\t\tbaseProductDto.push(item);\n\t\t\t}\n\t\t});\n\t\tsetBaseProducts(baseProductDto);\n\t};\n\n\treturn { baseProducts, isLoading, handleSelectBaseProduct };\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD,SAAgBC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,iBAAiB;AAEhD,SAASC,YAAY,QAAQ,gBAAgB;AAM7C,eAAe,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAC3C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAoB,EAAE,CAAC;EACvE,MAAM;IAAEO,IAAI;IAAEC;EAAU,CAAC,GAAGV,QAAQ,CAAC;IACpCW,QAAQ,EAAE,CAACP,YAAY,CAACQ,qBAAqB,CAAC;IAC9CC,OAAO,EAAEV;EACV,CAAC,CAAC;EAEFF,SAAS,CAAC,MAAM;IACf,IAAIQ,IAAI,EAAE;MACT,MAAMK,cAAiC,GAAG,EAAE;MAC5CL,IAAI,CAACM,GAAG,CAAEC,IAAI,IAAKF,cAAc,CAACG,IAAI,CAAC;QAAE,GAAGD,IAAI;QAAEE,UAAU,EAAE;MAAM,CAAC,CAAC,CAAC;MACvEV,eAAe,CAACM,cAAc,CAAC;IAChC;EACD,CAAC,EAAE,CAACL,IAAI,CAAC,CAAC;EAEV,MAAMU,uBAAuB,GAAIC,IAAY,IAAK;IACjD,MAAMN,cAAiC,GAAG,EAAE;IAC5CP,YAAY,CAACQ,GAAG,CAAEC,IAAI,IAAK;MAC1B,IAAIA,IAAI,CAACK,SAAS,KAAKD,IAAI,EAAE;QAC5BN,cAAc,CAACG,IAAI,CAAC;UAAE,GAAGD,IAAI;UAAEE,UAAU,EAAE,CAACF,IAAI,CAACE;QAAW,CAAC,CAAC;MAC/D,CAAC,MAAM;QACNJ,cAAc,CAACG,IAAI,CAACD,IAAI,CAAC;MAC1B;IACD,CAAC,CAAC;IACFR,eAAe,CAACM,cAAc,CAAC;EAChC,CAAC;EAED,OAAO;IAAEP,YAAY;IAAEG,SAAS;IAAES;EAAwB,CAAC;AAC5D;AAACb,EAAA,CA5BuBD,iBAAiB;EAAA,QAEZL,QAAQ;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}