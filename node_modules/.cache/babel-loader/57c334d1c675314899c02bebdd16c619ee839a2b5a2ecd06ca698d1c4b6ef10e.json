{"ast":null,"code":"import { unit } from '@ant-design/cssinjs';\nimport { getStyle as getCheckboxStyle } from '../../checkbox/style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nimport { genTreeStyle, initComponentToken } from '../../tree/style';\n// =============================== Base ===============================\nconst genBaseStyle = token => {\n  const {\n    componentCls,\n    treePrefixCls,\n    colorBgElevated\n  } = token;\n  const treeCls = \".\".concat(treePrefixCls);\n  return [\n  // ======================================================\n  // ==                     Dropdown                     ==\n  // ======================================================\n  {\n    [\"\".concat(componentCls, \"-dropdown\")]: [{\n      padding: \"\".concat(unit(token.paddingXS), \" \").concat(unit(token.calc(token.paddingXS).div(2).equal()))\n    },\n    // ====================== Tree ======================\n    genTreeStyle(treePrefixCls, mergeToken(token, {\n      colorBgContainer: colorBgElevated\n    })), {\n      [treeCls]: {\n        borderRadius: 0,\n        [\"\".concat(treeCls, \"-list-holder-inner\")]: {\n          alignItems: 'stretch',\n          [\"\".concat(treeCls, \"-treenode\")]: {\n            [\"\".concat(treeCls, \"-node-content-wrapper\")]: {\n              flex: 'auto'\n            }\n          }\n        }\n      }\n    },\n    // ==================== Checkbox ====================\n    getCheckboxStyle(\"\".concat(treePrefixCls, \"-checkbox\"), token),\n    // ====================== RTL =======================\n    {\n      '&-rtl': {\n        direction: 'rtl',\n        [\"\".concat(treeCls, \"-switcher\").concat(treeCls, \"-switcher_close\")]: {\n          [\"\".concat(treeCls, \"-switcher-icon svg\")]: {\n            transform: 'rotate(90deg)'\n          }\n        }\n      }\n    }]\n  }];\n};\nexport const prepareComponentToken = initComponentToken;\n// ============================== Export ==============================\nexport default function useTreeSelectStyle(prefixCls, treePrefixCls, rootCls) {\n  return genStyleHooks('TreeSelect', token => {\n    const treeSelectToken = mergeToken(token, {\n      treePrefixCls\n    });\n    return [genBaseStyle(treeSelectToken)];\n  }, initComponentToken)(prefixCls, rootCls);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}