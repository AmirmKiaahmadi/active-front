{"ast":null,"code":"import { resetComponent, textEllipsis } from '../../style';\nimport { initMoveMotion, initSlideMotion, slideDownIn, slideDownOut, slideUpIn, slideUpOut } from '../../style/motion';\nconst genItemStyle = token => {\n  const {\n    optionHeight,\n    optionFontSize,\n    optionLineHeight,\n    optionPadding\n  } = token;\n  return {\n    position: 'relative',\n    display: 'block',\n    minHeight: optionHeight,\n    padding: optionPadding,\n    color: token.colorText,\n    fontWeight: 'normal',\n    fontSize: optionFontSize,\n    lineHeight: optionLineHeight,\n    boxSizing: 'border-box'\n  };\n};\nconst genSingleStyle = token => {\n  const {\n    antCls,\n    componentCls\n  } = token;\n  const selectItemCls = \"\".concat(componentCls, \"-item\");\n  const slideUpEnterActive = \"&\".concat(antCls, \"-slide-up-enter\").concat(antCls, \"-slide-up-enter-active\");\n  const slideUpAppearActive = \"&\".concat(antCls, \"-slide-up-appear\").concat(antCls, \"-slide-up-appear-active\");\n  const slideUpLeaveActive = \"&\".concat(antCls, \"-slide-up-leave\").concat(antCls, \"-slide-up-leave-active\");\n  const dropdownPlacementCls = \"\".concat(componentCls, \"-dropdown-placement-\");\n  return [{\n    [\"\".concat(componentCls, \"-dropdown\")]: Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'absolute',\n      top: -9999,\n      zIndex: token.zIndexPopup,\n      boxSizing: 'border-box',\n      padding: token.paddingXXS,\n      overflow: 'hidden',\n      fontSize: token.fontSize,\n      // Fix select render lag of long text in chrome\n      // https://github.com/ant-design/ant-design/issues/11456\n      // https://github.com/ant-design/ant-design/issues/11843\n      fontVariant: 'initial',\n      backgroundColor: token.colorBgElevated,\n      borderRadius: token.borderRadiusLG,\n      outline: 'none',\n      boxShadow: token.boxShadowSecondary,\n      [\"\\n          \".concat(slideUpEnterActive).concat(dropdownPlacementCls, \"bottomLeft,\\n          \").concat(slideUpAppearActive).concat(dropdownPlacementCls, \"bottomLeft\\n        \")]: {\n        animationName: slideUpIn\n      },\n      [\"\\n          \".concat(slideUpEnterActive).concat(dropdownPlacementCls, \"topLeft,\\n          \").concat(slideUpAppearActive).concat(dropdownPlacementCls, \"topLeft,\\n          \").concat(slideUpEnterActive).concat(dropdownPlacementCls, \"topRight,\\n          \").concat(slideUpAppearActive).concat(dropdownPlacementCls, \"topRight\\n        \")]: {\n        animationName: slideDownIn\n      },\n      [\"\".concat(slideUpLeaveActive).concat(dropdownPlacementCls, \"bottomLeft\")]: {\n        animationName: slideUpOut\n      },\n      [\"\\n          \".concat(slideUpLeaveActive).concat(dropdownPlacementCls, \"topLeft,\\n          \").concat(slideUpLeaveActive).concat(dropdownPlacementCls, \"topRight\\n        \")]: {\n        animationName: slideDownOut\n      },\n      '&-hidden': {\n        display: 'none'\n      },\n      [selectItemCls]: Object.assign(Object.assign({}, genItemStyle(token)), {\n        cursor: 'pointer',\n        transition: \"background \".concat(token.motionDurationSlow, \" ease\"),\n        borderRadius: token.borderRadiusSM,\n        // =========== Group ============\n        '&-group': {\n          color: token.colorTextDescription,\n          fontSize: token.fontSizeSM,\n          cursor: 'default'\n        },\n        // =========== Option ===========\n        '&-option': {\n          display: 'flex',\n          '&-content': Object.assign({\n            flex: 'auto'\n          }, textEllipsis),\n          '&-state': {\n            flex: 'none',\n            display: 'flex',\n            alignItems: 'center'\n          },\n          [\"&-active:not(\".concat(selectItemCls, \"-option-disabled)\")]: {\n            backgroundColor: token.optionActiveBg\n          },\n          [\"&-selected:not(\".concat(selectItemCls, \"-option-disabled)\")]: {\n            color: token.optionSelectedColor,\n            fontWeight: token.optionSelectedFontWeight,\n            backgroundColor: token.optionSelectedBg,\n            [\"\".concat(selectItemCls, \"-option-state\")]: {\n              color: token.colorPrimary\n            },\n            [\"&:has(+ \".concat(selectItemCls, \"-option-selected:not(\").concat(selectItemCls, \"-option-disabled))\")]: {\n              borderEndStartRadius: 0,\n              borderEndEndRadius: 0,\n              [\"& + \".concat(selectItemCls, \"-option-selected:not(\").concat(selectItemCls, \"-option-disabled)\")]: {\n                borderStartStartRadius: 0,\n                borderStartEndRadius: 0\n              }\n            }\n          },\n          '&-disabled': {\n            [\"&\".concat(selectItemCls, \"-option-selected\")]: {\n              backgroundColor: token.colorBgContainerDisabled\n            },\n            color: token.colorTextDisabled,\n            cursor: 'not-allowed'\n          },\n          '&-grouped': {\n            paddingInlineStart: token.calc(token.controlPaddingHorizontal).mul(2).equal()\n          }\n        },\n        '&-empty': Object.assign(Object.assign({}, genItemStyle(token)), {\n          color: token.colorTextDisabled\n        })\n      }),\n      // =========================== RTL ===========================\n      '&-rtl': {\n        direction: 'rtl'\n      }\n    })\n  },\n  // Follow code may reuse in other components\n  initSlideMotion(token, 'slide-up'), initSlideMotion(token, 'slide-down'), initMoveMotion(token, 'move-up'), initMoveMotion(token, 'move-down')];\n};\nexport default genSingleStyle;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}