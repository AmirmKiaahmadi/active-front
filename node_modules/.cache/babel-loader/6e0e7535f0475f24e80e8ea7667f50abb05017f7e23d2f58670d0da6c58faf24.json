{"ast":null,"code":"import { unit } from '@ant-design/cssinjs';\nimport { prepareComponentToken, prepareToken } from '.';\nimport { genSubStyleComponent } from '../../theme/internal';\nconst genBorderedStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [\"\".concat(componentCls).concat(componentCls, \"-bordered\").concat(componentCls, \"-disabled:not(\").concat(componentCls, \"-mini)\")]: {\n      '&, &:hover': {\n        [\"\".concat(componentCls, \"-item-link\")]: {\n          borderColor: token.colorBorder\n        }\n      },\n      '&:focus-visible': {\n        [\"\".concat(componentCls, \"-item-link\")]: {\n          borderColor: token.colorBorder\n        }\n      },\n      [\"\".concat(componentCls, \"-item, \").concat(componentCls, \"-item-link\")]: {\n        backgroundColor: token.colorBgContainerDisabled,\n        borderColor: token.colorBorder,\n        [\"&:hover:not(\".concat(componentCls, \"-item-active)\")]: {\n          backgroundColor: token.colorBgContainerDisabled,\n          borderColor: token.colorBorder,\n          a: {\n            color: token.colorTextDisabled\n          }\n        },\n        [\"&\".concat(componentCls, \"-item-active\")]: {\n          backgroundColor: token.itemActiveBgDisabled\n        }\n      },\n      [\"\".concat(componentCls, \"-prev, \").concat(componentCls, \"-next\")]: {\n        '&:hover button': {\n          backgroundColor: token.colorBgContainerDisabled,\n          borderColor: token.colorBorder,\n          color: token.colorTextDisabled\n        },\n        [\"\".concat(componentCls, \"-item-link\")]: {\n          backgroundColor: token.colorBgContainerDisabled,\n          borderColor: token.colorBorder\n        }\n      }\n    },\n    [\"\".concat(componentCls).concat(componentCls, \"-bordered:not(\").concat(componentCls, \"-mini)\")]: {\n      [\"\".concat(componentCls, \"-prev, \").concat(componentCls, \"-next\")]: {\n        '&:hover button': {\n          borderColor: token.colorPrimaryHover,\n          backgroundColor: token.itemBg\n        },\n        [\"\".concat(componentCls, \"-item-link\")]: {\n          backgroundColor: token.itemLinkBg,\n          borderColor: token.colorBorder\n        },\n        [\"&:hover \".concat(componentCls, \"-item-link\")]: {\n          borderColor: token.colorPrimary,\n          backgroundColor: token.itemBg,\n          color: token.colorPrimary\n        },\n        [\"&\".concat(componentCls, \"-disabled\")]: {\n          [\"\".concat(componentCls, \"-item-link\")]: {\n            borderColor: token.colorBorder,\n            color: token.colorTextDisabled\n          }\n        }\n      },\n      [\"\".concat(componentCls, \"-item\")]: {\n        backgroundColor: token.itemBg,\n        border: \"\".concat(unit(token.lineWidth), \" \").concat(token.lineType, \" \").concat(token.colorBorder),\n        [\"&:hover:not(\".concat(componentCls, \"-item-active)\")]: {\n          borderColor: token.colorPrimary,\n          backgroundColor: token.itemBg,\n          a: {\n            color: token.colorPrimary\n          }\n        },\n        '&-active': {\n          borderColor: token.colorPrimary\n        }\n      }\n    }\n  };\n};\nexport default genSubStyleComponent(['Pagination', 'bordered'], token => {\n  const paginationToken = prepareToken(token);\n  return [genBorderedStyle(paginationToken)];\n}, prepareComponentToken);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}