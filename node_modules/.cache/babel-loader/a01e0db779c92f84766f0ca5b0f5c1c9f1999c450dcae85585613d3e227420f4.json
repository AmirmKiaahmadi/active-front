{"ast":null,"code":"import Axios from 'axios';\nimport { BASE_URL } from './config';\nexport const api = Axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    // 'content-type': 'application/json',\n  }\n});\napi.interceptors.request.use(async config => {\n  // config.headers &&\n  //   (config.headers as AxiosHeaders).set(\"Authorization\", `JWT`);\n  return config;\n}, error => {\n  Promise.reject(error);\n});\napi.interceptors.response.use(response => {\n  // if (response.status === 200 || response.status === 201) {\n  // }\n  return response;\n}, async function (error) {\n  var _error$response;\n  if ((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // window.localStorage.clear();\n    return window.location.href = '/dashboard/home';\n  }\n  return Promise.reject(error);\n});\nconst request = {\n  get: (endpoint, options) => {\n    return api.get(endpoint, options);\n  },\n  post: (endpoint, data, options) => {\n    return api.post(endpoint, data, options);\n  },\n  put: (endpoint, data, options) => {\n    return api.put(endpoint, data, options);\n  },\n  patch: (endpoint, data, options) => {\n    return api.patch(endpoint, Object.assign({}, data), options);\n  },\n  delete: (endpoint, data, options) => {\n    return api.delete(endpoint, {\n      data: data,\n      headers: options\n    });\n  },\n  options: (endpoint, options) => {\n    return api.options(endpoint, options);\n  },\n  head: (endpoint, options) => {\n    return api.head(endpoint, options);\n  }\n};\nexport default request;","map":{"version":3,"names":["Axios","BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","error","Promise","reject","response","_error$response","status","window","location","href","get","endpoint","options","post","data","put","patch","Object","assign","delete","head"],"sources":["/Users/amirkia/Documents/active-front/src/services/axios.ts"],"sourcesContent":["import Axios, {\n\tAxiosHeaders,\n\tAxiosRequestConfig,\n\tAxiosRequestHeaders,\n\tAxiosResponse,\n\tRawAxiosRequestConfig,\n} from 'axios';\nimport { BASE_URL } from './config';\n\nexport const api = Axios.create({\n\tbaseURL: BASE_URL,\n\theaders: {\n\t\t// 'content-type': 'application/json',\n\t},\n});\n\napi.interceptors.request.use(\n\tasync (config) => {\n\t\t// config.headers &&\n\t\t//   (config.headers as AxiosHeaders).set(\"Authorization\", `JWT`);\n\t\treturn config;\n\t},\n\t(error) => {\n\t\tPromise.reject(error);\n\t}\n);\n\napi.interceptors.response.use(\n\t(response) => {\n\t\t// if (response.status === 200 || response.status === 201) {\n\t\t// }\n\t\treturn response;\n\t},\n\tasync function (error) {\n\t\tif (error?.response?.status === 401) {\n\t\t\t// window.localStorage.clear();\n\t\t\treturn (window.location.href = '/dashboard/home');\n\t\t}\n\n\t\treturn Promise.reject(error);\n\t}\n);\n\nconst request = {\n\tget: <T>(\n\t\tendpoint: string,\n\t\toptions?: AxiosRequestConfig\n\t): Promise<AxiosResponse<T>> => {\n\t\treturn api.get(endpoint, options);\n\t},\n\tpost: (\n\t\tendpoint: string,\n\t\tdata?: unknown,\n\t\toptions?: RawAxiosRequestConfig\n\t): Promise<AxiosResponse> => {\n\t\treturn api.post(endpoint, data, options);\n\t},\n\tput: (\n\t\tendpoint: string,\n\t\tdata: unknown,\n\t\toptions?: AxiosRequestConfig\n\t): Promise<AxiosResponse> => {\n\t\treturn api.put(endpoint, data, options);\n\t},\n\tpatch: (\n\t\tendpoint: string,\n\t\tdata?: unknown,\n\t\toptions?: AxiosRequestConfig\n\t): Promise<AxiosResponse> => {\n\t\treturn api.patch(endpoint, Object.assign({}, data), options);\n\t},\n\tdelete: (\n\t\tendpoint: string,\n\t\tdata?: unknown,\n\t\toptions?: AxiosRequestHeaders\n\t): Promise<AxiosResponse> => {\n\t\treturn api.delete(endpoint, {\n\t\t\tdata: data,\n\t\t\theaders: options,\n\t\t});\n\t},\n\toptions: (\n\t\tendpoint: string,\n\t\toptions?: AxiosRequestConfig\n\t): Promise<AxiosResponse> => {\n\t\treturn api.options(endpoint, options);\n\t},\n\n\thead: (\n\t\tendpoint: string,\n\t\toptions?: AxiosRequestConfig\n\t): Promise<AxiosResponse> => {\n\t\treturn api.head(endpoint, options);\n\t},\n};\n\nexport default request;\n"],"mappings":"AAAA,OAAOA,KAAK,MAML,OAAO;AACd,SAASC,QAAQ,QAAQ,UAAU;AAEnC,OAAO,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC/BC,OAAO,EAAEH,QAAQ;EACjBI,OAAO,EAAE;IACR;EAAA;AAEF,CAAC,CAAC;AAEFH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAC3B,MAAOC,MAAM,IAAK;EACjB;EACA;EACA,OAAOA,MAAM;AACd,CAAC,EACAC,KAAK,IAAK;EACVC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AACtB,CACD,CAAC;AAEDR,GAAG,CAACI,YAAY,CAACO,QAAQ,CAACL,GAAG,CAC3BK,QAAQ,IAAK;EACb;EACA;EACA,OAAOA,QAAQ;AAChB,CAAC,EACD,gBAAgBH,KAAK,EAAE;EAAA,IAAAI,eAAA;EACtB,IAAI,CAAAJ,KAAK,aAALA,KAAK,wBAAAI,eAAA,GAALJ,KAAK,CAAEG,QAAQ,cAAAC,eAAA,uBAAfA,eAAA,CAAiBC,MAAM,MAAK,GAAG,EAAE;IACpC;IACA,OAAQC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,iBAAiB;EACjD;EAEA,OAAOP,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC7B,CACD,CAAC;AAED,MAAMH,OAAO,GAAG;EACfY,GAAG,EAAEA,CACJC,QAAgB,EAChBC,OAA4B,KACG;IAC/B,OAAOnB,GAAG,CAACiB,GAAG,CAACC,QAAQ,EAAEC,OAAO,CAAC;EAClC,CAAC;EACDC,IAAI,EAAEA,CACLF,QAAgB,EAChBG,IAAc,EACdF,OAA+B,KACH;IAC5B,OAAOnB,GAAG,CAACoB,IAAI,CAACF,QAAQ,EAAEG,IAAI,EAAEF,OAAO,CAAC;EACzC,CAAC;EACDG,GAAG,EAAEA,CACJJ,QAAgB,EAChBG,IAAa,EACbF,OAA4B,KACA;IAC5B,OAAOnB,GAAG,CAACsB,GAAG,CAACJ,QAAQ,EAAEG,IAAI,EAAEF,OAAO,CAAC;EACxC,CAAC;EACDI,KAAK,EAAEA,CACNL,QAAgB,EAChBG,IAAc,EACdF,OAA4B,KACA;IAC5B,OAAOnB,GAAG,CAACuB,KAAK,CAACL,QAAQ,EAAEM,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEJ,IAAI,CAAC,EAAEF,OAAO,CAAC;EAC7D,CAAC;EACDO,MAAM,EAAEA,CACPR,QAAgB,EAChBG,IAAc,EACdF,OAA6B,KACD;IAC5B,OAAOnB,GAAG,CAAC0B,MAAM,CAACR,QAAQ,EAAE;MAC3BG,IAAI,EAAEA,IAAI;MACVlB,OAAO,EAAEgB;IACV,CAAC,CAAC;EACH,CAAC;EACDA,OAAO,EAAEA,CACRD,QAAgB,EAChBC,OAA4B,KACA;IAC5B,OAAOnB,GAAG,CAACmB,OAAO,CAACD,QAAQ,EAAEC,OAAO,CAAC;EACtC,CAAC;EAEDQ,IAAI,EAAEA,CACLT,QAAgB,EAChBC,OAA4B,KACA;IAC5B,OAAOnB,GAAG,CAAC2B,IAAI,CAACT,QAAQ,EAAEC,OAAO,CAAC;EACnC;AACD,CAAC;AAED,eAAed,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}