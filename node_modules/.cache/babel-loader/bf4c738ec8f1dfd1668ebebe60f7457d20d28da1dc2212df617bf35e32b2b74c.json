{"ast":null,"code":"const genFixedStyle = token => {\n  const {\n    componentCls,\n    lineWidth,\n    colorSplit,\n    motionDurationSlow,\n    zIndexTableFixed,\n    tableBg,\n    zIndexTableSticky,\n    calc\n  } = token;\n  const shadowColor = colorSplit;\n  // Follow style is magic of shadow which should not follow token:\n  return {\n    [\"\".concat(componentCls, \"-wrapper\")]: {\n      [\"\\n        \".concat(componentCls, \"-cell-fix-left,\\n        \").concat(componentCls, \"-cell-fix-right\\n      \")]: {\n        position: 'sticky !important',\n        zIndex: zIndexTableFixed,\n        background: tableBg\n      },\n      [\"\\n        \".concat(componentCls, \"-cell-fix-left-first::after,\\n        \").concat(componentCls, \"-cell-fix-left-last::after\\n      \")]: {\n        position: 'absolute',\n        top: 0,\n        right: {\n          _skip_check_: true,\n          value: 0\n        },\n        bottom: calc(lineWidth).mul(-1).equal(),\n        width: 30,\n        transform: 'translateX(100%)',\n        transition: \"box-shadow \".concat(motionDurationSlow),\n        content: '\"\"',\n        pointerEvents: 'none'\n      },\n      [\"\".concat(componentCls, \"-cell-fix-left-all::after\")]: {\n        display: 'none'\n      },\n      [\"\\n        \".concat(componentCls, \"-cell-fix-right-first::after,\\n        \").concat(componentCls, \"-cell-fix-right-last::after\\n      \")]: {\n        position: 'absolute',\n        top: 0,\n        bottom: calc(lineWidth).mul(-1).equal(),\n        left: {\n          _skip_check_: true,\n          value: 0\n        },\n        width: 30,\n        transform: 'translateX(-100%)',\n        transition: \"box-shadow \".concat(motionDurationSlow),\n        content: '\"\"',\n        pointerEvents: 'none'\n      },\n      [\"\".concat(componentCls, \"-container\")]: {\n        position: 'relative',\n        '&::before, &::after': {\n          position: 'absolute',\n          top: 0,\n          bottom: 0,\n          zIndex: calc(zIndexTableSticky).add(1).equal({\n            unit: false\n          }),\n          width: 30,\n          transition: \"box-shadow \".concat(motionDurationSlow),\n          content: '\"\"',\n          pointerEvents: 'none'\n        },\n        '&::before': {\n          insetInlineStart: 0\n        },\n        '&::after': {\n          insetInlineEnd: 0\n        }\n      },\n      [\"\".concat(componentCls, \"-ping-left\")]: {\n        [\"&:not(\".concat(componentCls, \"-has-fix-left) \").concat(componentCls, \"-container::before\")]: {\n          boxShadow: \"inset 10px 0 8px -8px \".concat(shadowColor)\n        },\n        [\"\\n          \".concat(componentCls, \"-cell-fix-left-first::after,\\n          \").concat(componentCls, \"-cell-fix-left-last::after\\n        \")]: {\n          boxShadow: \"inset 10px 0 8px -8px \".concat(shadowColor)\n        },\n        [\"\".concat(componentCls, \"-cell-fix-left-last::before\")]: {\n          backgroundColor: 'transparent !important'\n        }\n      },\n      [\"\".concat(componentCls, \"-ping-right\")]: {\n        [\"&:not(\".concat(componentCls, \"-has-fix-right) \").concat(componentCls, \"-container::after\")]: {\n          boxShadow: \"inset -10px 0 8px -8px \".concat(shadowColor)\n        },\n        [\"\\n          \".concat(componentCls, \"-cell-fix-right-first::after,\\n          \").concat(componentCls, \"-cell-fix-right-last::after\\n        \")]: {\n          boxShadow: \"inset -10px 0 8px -8px \".concat(shadowColor)\n        }\n      },\n      // Gapped fixed Columns do not show the shadow\n      [\"\".concat(componentCls, \"-fixed-column-gapped\")]: {\n        [\"\\n        \".concat(componentCls, \"-cell-fix-left-first::after,\\n        \").concat(componentCls, \"-cell-fix-left-last::after,\\n        \").concat(componentCls, \"-cell-fix-right-first::after,\\n        \").concat(componentCls, \"-cell-fix-right-last::after\\n      \")]: {\n          boxShadow: 'none'\n        }\n      }\n    }\n  };\n};\nexport default genFixedStyle;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}