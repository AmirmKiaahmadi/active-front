{"ast":null,"code":"import { unit } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nconst genTimelineStyle = token => {\n  const {\n    componentCls,\n    calc\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      margin: 0,\n      padding: 0,\n      listStyle: 'none',\n      [\"\".concat(componentCls, \"-item\")]: {\n        position: 'relative',\n        margin: 0,\n        paddingBottom: token.itemPaddingBottom,\n        fontSize: token.fontSize,\n        listStyle: 'none',\n        '&-tail': {\n          position: 'absolute',\n          insetBlockStart: token.itemHeadSize,\n          insetInlineStart: calc(calc(token.itemHeadSize).sub(token.tailWidth)).div(2).equal(),\n          height: \"calc(100% - \".concat(unit(token.itemHeadSize), \")\"),\n          borderInlineStart: \"\".concat(unit(token.tailWidth), \" \").concat(token.lineType, \" \").concat(token.tailColor)\n        },\n        '&-pending': {\n          [\"\".concat(componentCls, \"-item-head\")]: {\n            fontSize: token.fontSizeSM,\n            backgroundColor: 'transparent'\n          },\n          [\"\".concat(componentCls, \"-item-tail\")]: {\n            display: 'none'\n          }\n        },\n        '&-head': {\n          position: 'absolute',\n          width: token.itemHeadSize,\n          height: token.itemHeadSize,\n          backgroundColor: token.dotBg,\n          border: \"\".concat(unit(token.dotBorderWidth), \" \").concat(token.lineType, \" transparent\"),\n          borderRadius: '50%',\n          '&-blue': {\n            color: token.colorPrimary,\n            borderColor: token.colorPrimary\n          },\n          '&-red': {\n            color: token.colorError,\n            borderColor: token.colorError\n          },\n          '&-green': {\n            color: token.colorSuccess,\n            borderColor: token.colorSuccess\n          },\n          '&-gray': {\n            color: token.colorTextDisabled,\n            borderColor: token.colorTextDisabled\n          }\n        },\n        '&-head-custom': {\n          position: 'absolute',\n          insetBlockStart: calc(token.itemHeadSize).div(2).equal(),\n          insetInlineStart: calc(token.itemHeadSize).div(2).equal(),\n          width: 'auto',\n          height: 'auto',\n          marginBlockStart: 0,\n          paddingBlock: token.customHeadPaddingVertical,\n          lineHeight: 1,\n          textAlign: 'center',\n          border: 0,\n          borderRadius: 0,\n          transform: 'translate(-50%, -50%)'\n        },\n        '&-content': {\n          position: 'relative',\n          insetBlockStart: calc(calc(token.fontSize).mul(token.lineHeight).sub(token.fontSize)).mul(-1).add(token.lineWidth).equal(),\n          marginInlineStart: calc(token.margin).add(token.itemHeadSize).equal(),\n          marginInlineEnd: 0,\n          marginBlockStart: 0,\n          marginBlockEnd: 0,\n          wordBreak: 'break-word'\n        },\n        '&-last': {\n          [\"> \".concat(componentCls, \"-item-tail\")]: {\n            display: 'none'\n          },\n          [\"> \".concat(componentCls, \"-item-content\")]: {\n            minHeight: calc(token.controlHeightLG).mul(1.2).equal()\n          }\n        }\n      },\n      [\"&\".concat(componentCls, \"-alternate,\\n        &\").concat(componentCls, \"-right,\\n        &\").concat(componentCls, \"-label\")]: {\n        [\"\".concat(componentCls, \"-item\")]: {\n          '&-tail, &-head, &-head-custom': {\n            insetInlineStart: '50%'\n          },\n          '&-head': {\n            marginInlineStart: calc(token.marginXXS).mul(-1).equal(),\n            '&-custom': {\n              marginInlineStart: calc(token.tailWidth).div(2).equal()\n            }\n          },\n          '&-left': {\n            [\"\".concat(componentCls, \"-item-content\")]: {\n              insetInlineStart: \"calc(50% - \".concat(unit(token.marginXXS), \")\"),\n              width: \"calc(50% - \".concat(unit(token.marginSM), \")\"),\n              textAlign: 'start'\n            }\n          },\n          '&-right': {\n            [\"\".concat(componentCls, \"-item-content\")]: {\n              width: \"calc(50% - \".concat(unit(token.marginSM), \")\"),\n              margin: 0,\n              textAlign: 'end'\n            }\n          }\n        }\n      },\n      [\"&\".concat(componentCls, \"-right\")]: {\n        [\"\".concat(componentCls, \"-item-right\")]: {\n          [\"\".concat(componentCls, \"-item-tail,\\n            \").concat(componentCls, \"-item-head,\\n            \").concat(componentCls, \"-item-head-custom\")]: {\n            insetInlineStart: \"calc(100% - \".concat(unit(calc(calc(token.itemHeadSize).add(token.tailWidth)).div(2).equal()), \")\")\n          },\n          [\"\".concat(componentCls, \"-item-content\")]: {\n            width: \"calc(100% - \".concat(unit(calc(token.itemHeadSize).add(token.marginXS).equal()), \")\")\n          }\n        }\n      },\n      [\"&\".concat(componentCls, \"-pending\\n        \").concat(componentCls, \"-item-last\\n        \").concat(componentCls, \"-item-tail\")]: {\n        display: 'block',\n        height: \"calc(100% - \".concat(unit(token.margin), \")\"),\n        borderInlineStart: \"\".concat(unit(token.tailWidth), \" dotted \").concat(token.tailColor)\n      },\n      [\"&\".concat(componentCls, \"-reverse\\n        \").concat(componentCls, \"-item-last\\n        \").concat(componentCls, \"-item-tail\")]: {\n        display: 'none'\n      },\n      [\"&\".concat(componentCls, \"-reverse \").concat(componentCls, \"-item-pending\")]: {\n        [\"\".concat(componentCls, \"-item-tail\")]: {\n          insetBlockStart: token.margin,\n          display: 'block',\n          height: \"calc(100% - \".concat(unit(token.margin), \")\"),\n          borderInlineStart: \"\".concat(unit(token.tailWidth), \" dotted \").concat(token.tailColor)\n        },\n        [\"\".concat(componentCls, \"-item-content\")]: {\n          minHeight: calc(token.controlHeightLG).mul(1.2).equal()\n        }\n      },\n      [\"&\".concat(componentCls, \"-label\")]: {\n        [\"\".concat(componentCls, \"-item-label\")]: {\n          position: 'absolute',\n          insetBlockStart: calc(calc(token.fontSize).mul(token.lineHeight).sub(token.fontSize)).mul(-1).add(token.tailWidth).equal(),\n          width: \"calc(50% - \".concat(unit(token.marginSM), \")\"),\n          textAlign: 'end'\n        },\n        [\"\".concat(componentCls, \"-item-right\")]: {\n          [\"\".concat(componentCls, \"-item-label\")]: {\n            insetInlineStart: \"calc(50% + \".concat(unit(token.marginSM), \")\"),\n            width: \"calc(50% - \".concat(unit(token.marginSM), \")\"),\n            textAlign: 'start'\n          }\n        }\n      },\n      // ====================== RTL =======================\n      '&-rtl': {\n        direction: 'rtl',\n        [\"\".concat(componentCls, \"-item-head-custom\")]: {\n          transform: \"translate(50%, -50%)\"\n        }\n      }\n    })\n  };\n};\n// ============================== Export ==============================\nexport const prepareComponentToken = token => ({\n  tailColor: token.colorSplit,\n  tailWidth: token.lineWidthBold,\n  dotBorderWidth: token.wireframe ? token.lineWidthBold : token.lineWidth * 3,\n  dotBg: token.colorBgContainer,\n  itemPaddingBottom: token.padding * 1.25\n});\nexport default genStyleHooks('Timeline', token => {\n  const timeLineToken = mergeToken(token, {\n    itemHeadSize: 10,\n    customHeadPaddingVertical: token.paddingXXS,\n    paddingInlineEnd: 2\n  });\n  return [genTimelineStyle(timeLineToken)];\n}, prepareComponentToken);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}