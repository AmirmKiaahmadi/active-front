{"ast":null,"code":"/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to determine the\n * of assets that were updated (or not updated) during the install event.\n *\n * @private\n */\nclass PrecacheInstallReportPlugin {\n  constructor() {\n    this.updatedURLs = [];\n    this.notUpdatedURLs = [];\n    this.handlerWillStart = async _ref => {\n      let {\n        request,\n        state\n      } = _ref;\n      // TODO: `state` should never be undefined...\n      if (state) {\n        state.originalRequest = request;\n      }\n    };\n    this.cachedResponseWillBeUsed = async _ref2 => {\n      let {\n        event,\n        state,\n        cachedResponse\n      } = _ref2;\n      if (event.type === 'install') {\n        if (state && state.originalRequest && state.originalRequest instanceof Request) {\n          // TODO: `state` should never be undefined...\n          const url = state.originalRequest.url;\n          if (cachedResponse) {\n            this.notUpdatedURLs.push(url);\n          } else {\n            this.updatedURLs.push(url);\n          }\n        }\n      }\n      return cachedResponse;\n    };\n  }\n}\nexport { PrecacheInstallReportPlugin };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}