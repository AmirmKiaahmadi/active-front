{"ast":null,"code":"import Axios from'axios';import{BASE_URL}from'./config';export const api=Axios.create({baseURL:BASE_URL,headers:{// 'content-type': 'application/json',\n}});api.interceptors.request.use(async config=>{// config.headers &&\n//   (config.headers as AxiosHeaders).set(\"Authorization\", `JWT`);\nreturn config;},error=>{Promise.reject(error);});api.interceptors.response.use(response=>{// if (response.status === 200 || response.status === 201) {\n// }\nreturn response;},async function(error){var _error$response;if((error===null||error===void 0?void 0:(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){// window.localStorage.clear();\nreturn window.location.href='/dashboard/home';}return Promise.reject(error);});const request={get:(endpoint,options)=>{return api.get(endpoint,options);},post:(endpoint,data,options)=>{return api.post(endpoint,data,options);},put:(endpoint,data,options)=>{return api.put(endpoint,data,options);},patch:(endpoint,data,options)=>{return api.patch(endpoint,Object.assign({},data),options);},delete:(endpoint,data,options)=>{return api.delete(endpoint,{data:data,headers:options});},options:(endpoint,options)=>{return api.options(endpoint,options);},head:(endpoint,options)=>{return api.head(endpoint,options);}};export default request;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}