{"ast":null,"code":"// ============================ Directory =============================\nexport const genDirectoryStyle = _ref => {\n  let {\n    treeCls,\n    treeNodeCls,\n    directoryNodeSelectedBg,\n    directoryNodeSelectedColor,\n    motionDurationMid,\n    borderRadius,\n    controlItemBgHover\n  } = _ref;\n  return {\n    [\"\".concat(treeCls).concat(treeCls, \"-directory \").concat(treeNodeCls)]: {\n      // >>> Title\n      [\"\".concat(treeCls, \"-node-content-wrapper\")]: {\n        position: 'static',\n        [\"> *:not(\".concat(treeCls, \"-drop-indicator)\")]: {\n          position: 'relative'\n        },\n        '&:hover': {\n          background: 'transparent'\n        },\n        // Expand interactive area to whole line\n        '&:before': {\n          position: 'absolute',\n          inset: 0,\n          transition: \"background-color \".concat(motionDurationMid),\n          content: '\"\"',\n          borderRadius\n        },\n        '&:hover:before': {\n          background: controlItemBgHover\n        }\n      },\n      [\"\".concat(treeCls, \"-switcher, \").concat(treeCls, \"-checkbox, \").concat(treeCls, \"-draggable-icon\")]: {\n        zIndex: 1\n      },\n      // ============= Selected =============\n      '&-selected': {\n        [\"\".concat(treeCls, \"-switcher, \").concat(treeCls, \"-draggable-icon\")]: {\n          color: directoryNodeSelectedColor\n        },\n        // >>> Title\n        [\"\".concat(treeCls, \"-node-content-wrapper\")]: {\n          color: directoryNodeSelectedColor,\n          background: 'transparent',\n          '&:before, &:hover:before': {\n            background: directoryNodeSelectedBg\n          }\n        }\n      }\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}