{"ast":null,"code":"const genButtonBorderStyle = (buttonTypeCls, borderColor) => ({\n  // Border\n  [\"> span, > \".concat(buttonTypeCls)]: {\n    '&:not(:last-child)': {\n      [\"&, & > \".concat(buttonTypeCls)]: {\n        '&:not(:disabled)': {\n          borderInlineEndColor: borderColor\n        }\n      }\n    },\n    '&:not(:first-child)': {\n      [\"&, & > \".concat(buttonTypeCls)]: {\n        '&:not(:disabled)': {\n          borderInlineStartColor: borderColor\n        }\n      }\n    }\n  }\n});\nconst genGroupStyle = token => {\n  const {\n    componentCls,\n    fontSize,\n    lineWidth,\n    groupBorderColor,\n    colorErrorHover\n  } = token;\n  return {\n    [\"\".concat(componentCls, \"-group\")]: [{\n      position: 'relative',\n      display: 'inline-flex',\n      // Border\n      [\"> span, > \".concat(componentCls)]: {\n        '&:not(:last-child)': {\n          [\"&, & > \".concat(componentCls)]: {\n            borderStartEndRadius: 0,\n            borderEndEndRadius: 0\n          }\n        },\n        '&:not(:first-child)': {\n          marginInlineStart: token.calc(lineWidth).mul(-1).equal(),\n          [\"&, & > \".concat(componentCls)]: {\n            borderStartStartRadius: 0,\n            borderEndStartRadius: 0\n          }\n        }\n      },\n      [componentCls]: {\n        position: 'relative',\n        zIndex: 1,\n        '&:hover, &:focus, &:active': {\n          zIndex: 2\n        },\n        '&[disabled]': {\n          zIndex: 0\n        }\n      },\n      [\"\".concat(componentCls, \"-icon-only\")]: {\n        fontSize\n      }\n    },\n    // Border Color\n    genButtonBorderStyle(\"\".concat(componentCls, \"-primary\"), groupBorderColor), genButtonBorderStyle(\"\".concat(componentCls, \"-danger\"), colorErrorHover)]\n  };\n};\nexport default genGroupStyle;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}