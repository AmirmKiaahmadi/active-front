{"ast":null,"code":"import { unit } from '@ant-design/cssinjs';\nimport { genBasicInputStyle, genInputSmallStyle, initComponentToken, initInputToken } from '../../input/style';\nimport { genBaseOutlinedStyle, genDisabledStyle } from '../../input/style/variants';\nimport { genFocusOutline, genFocusStyle, resetComponent } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nconst genPaginationDisabledStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [\"\".concat(componentCls, \"-disabled\")]: {\n      '&, &:hover': {\n        cursor: 'not-allowed',\n        [\"\".concat(componentCls, \"-item-link\")]: {\n          color: token.colorTextDisabled,\n          cursor: 'not-allowed'\n        }\n      },\n      '&:focus-visible': {\n        cursor: 'not-allowed',\n        [\"\".concat(componentCls, \"-item-link\")]: {\n          color: token.colorTextDisabled,\n          cursor: 'not-allowed'\n        }\n      }\n    },\n    [\"&\".concat(componentCls, \"-disabled\")]: {\n      cursor: 'not-allowed',\n      [\"\".concat(componentCls, \"-item\")]: {\n        cursor: 'not-allowed',\n        '&:hover, &:active': {\n          backgroundColor: 'transparent'\n        },\n        a: {\n          color: token.colorTextDisabled,\n          backgroundColor: 'transparent',\n          border: 'none',\n          cursor: 'not-allowed'\n        },\n        '&-active': {\n          borderColor: token.colorBorder,\n          backgroundColor: token.itemActiveBgDisabled,\n          '&:hover, &:active': {\n            backgroundColor: token.itemActiveBgDisabled\n          },\n          a: {\n            color: token.itemActiveColorDisabled\n          }\n        }\n      },\n      [\"\".concat(componentCls, \"-item-link\")]: {\n        color: token.colorTextDisabled,\n        cursor: 'not-allowed',\n        '&:hover, &:active': {\n          backgroundColor: 'transparent'\n        },\n        [\"\".concat(componentCls, \"-simple&\")]: {\n          backgroundColor: 'transparent',\n          '&:hover, &:active': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      [\"\".concat(componentCls, \"-simple-pager\")]: {\n        color: token.colorTextDisabled\n      },\n      [\"\".concat(componentCls, \"-jump-prev, \").concat(componentCls, \"-jump-next\")]: {\n        [\"\".concat(componentCls, \"-item-link-icon\")]: {\n          opacity: 0\n        },\n        [\"\".concat(componentCls, \"-item-ellipsis\")]: {\n          opacity: 1\n        }\n      }\n    },\n    [\"&\".concat(componentCls, \"-simple\")]: {\n      [\"\".concat(componentCls, \"-prev, \").concat(componentCls, \"-next\")]: {\n        [\"&\".concat(componentCls, \"-disabled \").concat(componentCls, \"-item-link\")]: {\n          '&:hover, &:active': {\n            backgroundColor: 'transparent'\n          }\n        }\n      }\n    }\n  };\n};\nconst genPaginationMiniStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [\"&\".concat(componentCls, \"-mini \").concat(componentCls, \"-total-text, &\").concat(componentCls, \"-mini \").concat(componentCls, \"-simple-pager\")]: {\n      height: token.itemSizeSM,\n      lineHeight: unit(token.itemSizeSM)\n    },\n    [\"&\".concat(componentCls, \"-mini \").concat(componentCls, \"-item\")]: {\n      minWidth: token.itemSizeSM,\n      height: token.itemSizeSM,\n      margin: 0,\n      lineHeight: unit(token.calc(token.itemSizeSM).sub(2).equal())\n    },\n    [\"&\".concat(componentCls, \"-mini:not(\").concat(componentCls, \"-disabled) \").concat(componentCls, \"-item:not(\").concat(componentCls, \"-item-active)\")]: {\n      backgroundColor: 'transparent',\n      borderColor: 'transparent',\n      '&:hover': {\n        backgroundColor: token.colorBgTextHover\n      },\n      '&:active': {\n        backgroundColor: token.colorBgTextActive\n      }\n    },\n    [\"&\".concat(componentCls, \"-mini \").concat(componentCls, \"-prev, &\").concat(componentCls, \"-mini \").concat(componentCls, \"-next\")]: {\n      minWidth: token.itemSizeSM,\n      height: token.itemSizeSM,\n      margin: 0,\n      lineHeight: unit(token.itemSizeSM)\n    },\n    [\"&\".concat(componentCls, \"-mini:not(\").concat(componentCls, \"-disabled)\")]: {\n      [\"\".concat(componentCls, \"-prev, \").concat(componentCls, \"-next\")]: {\n        [\"&:hover \".concat(componentCls, \"-item-link\")]: {\n          backgroundColor: token.colorBgTextHover\n        },\n        [\"&:active \".concat(componentCls, \"-item-link\")]: {\n          backgroundColor: token.colorBgTextActive\n        },\n        [\"&\".concat(componentCls, \"-disabled:hover \").concat(componentCls, \"-item-link\")]: {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n    [\"\\n    &\".concat(componentCls, \"-mini \").concat(componentCls, \"-prev \").concat(componentCls, \"-item-link,\\n    &\").concat(componentCls, \"-mini \").concat(componentCls, \"-next \").concat(componentCls, \"-item-link\\n    \")]: {\n      backgroundColor: 'transparent',\n      borderColor: 'transparent',\n      '&::after': {\n        height: token.itemSizeSM,\n        lineHeight: unit(token.itemSizeSM)\n      }\n    },\n    [\"&\".concat(componentCls, \"-mini \").concat(componentCls, \"-jump-prev, &\").concat(componentCls, \"-mini \").concat(componentCls, \"-jump-next\")]: {\n      height: token.itemSizeSM,\n      marginInlineEnd: 0,\n      lineHeight: unit(token.itemSizeSM)\n    },\n    [\"&\".concat(componentCls, \"-mini \").concat(componentCls, \"-options\")]: {\n      marginInlineStart: token.paginationMiniOptionsMarginInlineStart,\n      '&-size-changer': {\n        top: token.miniOptionsSizeChangerTop\n      },\n      '&-quick-jumper': {\n        height: token.itemSizeSM,\n        lineHeight: unit(token.itemSizeSM),\n        input: Object.assign(Object.assign({}, genInputSmallStyle(token)), {\n          width: token.paginationMiniQuickJumperInputWidth,\n          height: token.controlHeightSM\n        })\n      }\n    }\n  };\n};\nconst genPaginationSimpleStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [\"\\n    &\".concat(componentCls, \"-simple \").concat(componentCls, \"-prev,\\n    &\").concat(componentCls, \"-simple \").concat(componentCls, \"-next\\n    \")]: {\n      height: token.itemSizeSM,\n      lineHeight: unit(token.itemSizeSM),\n      verticalAlign: 'top',\n      [\"\".concat(componentCls, \"-item-link\")]: {\n        height: token.itemSizeSM,\n        backgroundColor: 'transparent',\n        border: 0,\n        '&:hover': {\n          backgroundColor: token.colorBgTextHover\n        },\n        '&:active': {\n          backgroundColor: token.colorBgTextActive\n        },\n        '&::after': {\n          height: token.itemSizeSM,\n          lineHeight: unit(token.itemSizeSM)\n        }\n      }\n    },\n    [\"&\".concat(componentCls, \"-simple \").concat(componentCls, \"-simple-pager\")]: {\n      display: 'inline-block',\n      height: token.itemSizeSM,\n      marginInlineEnd: token.marginXS,\n      input: {\n        boxSizing: 'border-box',\n        height: '100%',\n        padding: \"0 \".concat(unit(token.paginationItemPaddingInline)),\n        textAlign: 'center',\n        backgroundColor: token.itemInputBg,\n        border: \"\".concat(unit(token.lineWidth), \" \").concat(token.lineType, \" \").concat(token.colorBorder),\n        borderRadius: token.borderRadius,\n        outline: 'none',\n        transition: \"border-color \".concat(token.motionDurationMid),\n        color: 'inherit',\n        '&:hover': {\n          borderColor: token.colorPrimary\n        },\n        '&:focus': {\n          borderColor: token.colorPrimaryHover,\n          boxShadow: \"\".concat(unit(token.inputOutlineOffset), \" 0 \").concat(unit(token.controlOutlineWidth), \" \").concat(token.controlOutline)\n        },\n        '&[disabled]': {\n          color: token.colorTextDisabled,\n          backgroundColor: token.colorBgContainerDisabled,\n          borderColor: token.colorBorder,\n          cursor: 'not-allowed'\n        }\n      }\n    }\n  };\n};\nconst genPaginationJumpStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [\"\".concat(componentCls, \"-jump-prev, \").concat(componentCls, \"-jump-next\")]: {\n      outline: 0,\n      [\"\".concat(componentCls, \"-item-container\")]: {\n        position: 'relative',\n        [\"\".concat(componentCls, \"-item-link-icon\")]: {\n          color: token.colorPrimary,\n          fontSize: token.fontSizeSM,\n          opacity: 0,\n          transition: \"all \".concat(token.motionDurationMid),\n          '&-svg': {\n            top: 0,\n            insetInlineEnd: 0,\n            bottom: 0,\n            insetInlineStart: 0,\n            margin: 'auto'\n          }\n        },\n        [\"\".concat(componentCls, \"-item-ellipsis\")]: {\n          position: 'absolute',\n          top: 0,\n          insetInlineEnd: 0,\n          bottom: 0,\n          insetInlineStart: 0,\n          display: 'block',\n          margin: 'auto',\n          color: token.colorTextDisabled,\n          letterSpacing: token.paginationEllipsisLetterSpacing,\n          textAlign: 'center',\n          textIndent: token.paginationEllipsisTextIndent,\n          opacity: 1,\n          transition: \"all \".concat(token.motionDurationMid)\n        }\n      },\n      '&:hover': {\n        [\"\".concat(componentCls, \"-item-link-icon\")]: {\n          opacity: 1\n        },\n        [\"\".concat(componentCls, \"-item-ellipsis\")]: {\n          opacity: 0\n        }\n      }\n    },\n    [\"\\n    \".concat(componentCls, \"-prev,\\n    \").concat(componentCls, \"-jump-prev,\\n    \").concat(componentCls, \"-jump-next\\n    \")]: {\n      marginInlineEnd: token.marginXS\n    },\n    [\"\\n    \".concat(componentCls, \"-prev,\\n    \").concat(componentCls, \"-next,\\n    \").concat(componentCls, \"-jump-prev,\\n    \").concat(componentCls, \"-jump-next\\n    \")]: {\n      display: 'inline-block',\n      minWidth: token.itemSize,\n      height: token.itemSize,\n      color: token.colorText,\n      fontFamily: token.fontFamily,\n      lineHeight: unit(token.itemSize),\n      textAlign: 'center',\n      verticalAlign: 'middle',\n      listStyle: 'none',\n      borderRadius: token.borderRadius,\n      cursor: 'pointer',\n      transition: \"all \".concat(token.motionDurationMid)\n    },\n    [\"\".concat(componentCls, \"-prev, \").concat(componentCls, \"-next\")]: {\n      outline: 0,\n      button: {\n        color: token.colorText,\n        cursor: 'pointer',\n        userSelect: 'none'\n      },\n      [\"\".concat(componentCls, \"-item-link\")]: {\n        display: 'block',\n        width: '100%',\n        height: '100%',\n        padding: 0,\n        fontSize: token.fontSizeSM,\n        textAlign: 'center',\n        backgroundColor: 'transparent',\n        border: \"\".concat(unit(token.lineWidth), \" \").concat(token.lineType, \" transparent\"),\n        borderRadius: token.borderRadius,\n        outline: 'none',\n        transition: \"all \".concat(token.motionDurationMid)\n      },\n      [\"&:hover \".concat(componentCls, \"-item-link\")]: {\n        backgroundColor: token.colorBgTextHover\n      },\n      [\"&:active \".concat(componentCls, \"-item-link\")]: {\n        backgroundColor: token.colorBgTextActive\n      },\n      [\"&\".concat(componentCls, \"-disabled:hover\")]: {\n        [\"\".concat(componentCls, \"-item-link\")]: {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n    [\"\".concat(componentCls, \"-slash\")]: {\n      marginInlineEnd: token.paginationSlashMarginInlineEnd,\n      marginInlineStart: token.paginationSlashMarginInlineStart\n    },\n    [\"\".concat(componentCls, \"-options\")]: {\n      display: 'inline-block',\n      marginInlineStart: token.margin,\n      verticalAlign: 'middle',\n      '&-size-changer': {\n        display: 'inline-block',\n        width: 'auto'\n      },\n      '&-quick-jumper': {\n        display: 'inline-block',\n        height: token.controlHeight,\n        marginInlineStart: token.marginXS,\n        lineHeight: unit(token.controlHeight),\n        verticalAlign: 'top',\n        input: Object.assign(Object.assign(Object.assign({}, genBasicInputStyle(token)), genBaseOutlinedStyle(token, {\n          borderColor: token.colorBorder,\n          hoverBorderColor: token.colorPrimaryHover,\n          activeBorderColor: token.colorPrimary,\n          activeShadow: token.activeShadow\n        })), {\n          '&[disabled]': Object.assign({}, genDisabledStyle(token)),\n          width: token.calc(token.controlHeightLG).mul(1.25).equal(),\n          height: token.controlHeight,\n          boxSizing: 'border-box',\n          margin: 0,\n          marginInlineStart: token.marginXS,\n          marginInlineEnd: token.marginXS\n        })\n      }\n    }\n  };\n};\nconst genPaginationItemStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [\"\".concat(componentCls, \"-item\")]: {\n      display: 'inline-block',\n      minWidth: token.itemSize,\n      height: token.itemSize,\n      marginInlineEnd: token.marginXS,\n      fontFamily: token.fontFamily,\n      lineHeight: unit(token.calc(token.itemSize).sub(2).equal()),\n      textAlign: 'center',\n      verticalAlign: 'middle',\n      listStyle: 'none',\n      backgroundColor: token.itemBg,\n      border: \"\".concat(unit(token.lineWidth), \" \").concat(token.lineType, \" transparent\"),\n      borderRadius: token.borderRadius,\n      outline: 0,\n      cursor: 'pointer',\n      userSelect: 'none',\n      a: {\n        display: 'block',\n        padding: \"0 \".concat(unit(token.paginationItemPaddingInline)),\n        color: token.colorText,\n        '&:hover': {\n          textDecoration: 'none'\n        }\n      },\n      [\"&:not(\".concat(componentCls, \"-item-active)\")]: {\n        '&:hover': {\n          transition: \"all \".concat(token.motionDurationMid),\n          backgroundColor: token.colorBgTextHover\n        },\n        '&:active': {\n          backgroundColor: token.colorBgTextActive\n        }\n      },\n      '&-active': {\n        fontWeight: token.fontWeightStrong,\n        backgroundColor: token.itemActiveBg,\n        borderColor: token.colorPrimary,\n        a: {\n          color: token.colorPrimary\n        },\n        '&:hover': {\n          borderColor: token.colorPrimaryHover\n        },\n        '&:hover a': {\n          color: token.colorPrimaryHover\n        }\n      }\n    }\n  };\n};\nconst genPaginationStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'flex',\n      '&-start': {\n        justifyContent: 'start'\n      },\n      '&-center': {\n        justifyContent: 'center'\n      },\n      '&-end': {\n        justifyContent: 'end'\n      },\n      'ul, ol': {\n        margin: 0,\n        padding: 0,\n        listStyle: 'none'\n      },\n      '&::after': {\n        display: 'block',\n        clear: 'both',\n        height: 0,\n        overflow: 'hidden',\n        visibility: 'hidden',\n        content: '\"\"'\n      },\n      [\"\".concat(componentCls, \"-total-text\")]: {\n        display: 'inline-block',\n        height: token.itemSize,\n        marginInlineEnd: token.marginXS,\n        lineHeight: unit(token.calc(token.itemSize).sub(2).equal()),\n        verticalAlign: 'middle'\n      }\n    }), genPaginationItemStyle(token)), genPaginationJumpStyle(token)), genPaginationSimpleStyle(token)), genPaginationMiniStyle(token)), genPaginationDisabledStyle(token)), {\n      // media query style\n      [\"@media only screen and (max-width: \".concat(token.screenLG, \"px)\")]: {\n        [\"\".concat(componentCls, \"-item\")]: {\n          '&-after-jump-prev, &-before-jump-next': {\n            display: 'none'\n          }\n        }\n      },\n      [\"@media only screen and (max-width: \".concat(token.screenSM, \"px)\")]: {\n        [\"\".concat(componentCls, \"-options\")]: {\n          display: 'none'\n        }\n      }\n    }),\n    // rtl style\n    [\"&\".concat(token.componentCls, \"-rtl\")]: {\n      direction: 'rtl'\n    }\n  };\n};\nconst genPaginationFocusStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [\"\".concat(componentCls, \":not(\").concat(componentCls, \"-disabled)\")]: {\n      [\"\".concat(componentCls, \"-item\")]: Object.assign({}, genFocusStyle(token)),\n      [\"\".concat(componentCls, \"-jump-prev, \").concat(componentCls, \"-jump-next\")]: {\n        '&:focus-visible': Object.assign({\n          [\"\".concat(componentCls, \"-item-link-icon\")]: {\n            opacity: 1\n          },\n          [\"\".concat(componentCls, \"-item-ellipsis\")]: {\n            opacity: 0\n          }\n        }, genFocusOutline(token))\n      },\n      [\"\".concat(componentCls, \"-prev, \").concat(componentCls, \"-next\")]: {\n        [\"&:focus-visible \".concat(componentCls, \"-item-link\")]: Object.assign({}, genFocusOutline(token))\n      }\n    }\n  };\n};\nexport const prepareComponentToken = token => Object.assign({\n  itemBg: token.colorBgContainer,\n  itemSize: token.controlHeight,\n  itemSizeSM: token.controlHeightSM,\n  itemActiveBg: token.colorBgContainer,\n  itemLinkBg: token.colorBgContainer,\n  itemActiveColorDisabled: token.colorTextDisabled,\n  itemActiveBgDisabled: token.controlItemBgActiveDisabled,\n  itemInputBg: token.colorBgContainer,\n  miniOptionsSizeChangerTop: 0\n}, initComponentToken(token));\nexport const prepareToken = token => mergeToken(token, {\n  inputOutlineOffset: 0,\n  paginationMiniOptionsMarginInlineStart: token.calc(token.marginXXS).div(2).equal(),\n  paginationMiniQuickJumperInputWidth: token.calc(token.controlHeightLG).mul(1.1).equal(),\n  paginationItemPaddingInline: token.calc(token.marginXXS).mul(1.5).equal(),\n  paginationEllipsisLetterSpacing: token.calc(token.marginXXS).div(2).equal(),\n  paginationSlashMarginInlineStart: token.marginSM,\n  paginationSlashMarginInlineEnd: token.marginSM,\n  paginationEllipsisTextIndent: '0.13em' // magic for ui experience\n}, initInputToken(token));\n// ============================== Export ==============================\nexport default genStyleHooks('Pagination', token => {\n  const paginationToken = prepareToken(token);\n  return [genPaginationStyle(paginationToken), genPaginationFocusStyle(paginationToken)];\n}, prepareComponentToken);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}