{"ast":null,"code":"import { unit } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nconst genBorderedStyle = token => {\n  const {\n    listBorderedCls,\n    componentCls,\n    paddingLG,\n    margin,\n    itemPaddingSM,\n    itemPaddingLG,\n    marginLG,\n    borderRadiusLG\n  } = token;\n  return {\n    [listBorderedCls]: {\n      border: \"\".concat(unit(token.lineWidth), \" \").concat(token.lineType, \" \").concat(token.colorBorder),\n      borderRadius: borderRadiusLG,\n      [\"\".concat(componentCls, \"-header,\").concat(componentCls, \"-footer,\").concat(componentCls, \"-item\")]: {\n        paddingInline: paddingLG\n      },\n      [\"\".concat(componentCls, \"-pagination\")]: {\n        margin: \"\".concat(unit(margin), \" \").concat(unit(marginLG))\n      }\n    },\n    [\"\".concat(listBorderedCls).concat(componentCls, \"-sm\")]: {\n      [\"\".concat(componentCls, \"-item,\").concat(componentCls, \"-header,\").concat(componentCls, \"-footer\")]: {\n        padding: itemPaddingSM\n      }\n    },\n    [\"\".concat(listBorderedCls).concat(componentCls, \"-lg\")]: {\n      [\"\".concat(componentCls, \"-item,\").concat(componentCls, \"-header,\").concat(componentCls, \"-footer\")]: {\n        padding: itemPaddingLG\n      }\n    }\n  };\n};\nconst genResponsiveStyle = token => {\n  const {\n    componentCls,\n    screenSM,\n    screenMD,\n    marginLG,\n    marginSM,\n    margin\n  } = token;\n  return {\n    [\"@media screen and (max-width:\".concat(screenMD, \"px)\")]: {\n      [componentCls]: {\n        [\"\".concat(componentCls, \"-item\")]: {\n          [\"\".concat(componentCls, \"-item-action\")]: {\n            marginInlineStart: marginLG\n          }\n        }\n      },\n      [\"\".concat(componentCls, \"-vertical\")]: {\n        [\"\".concat(componentCls, \"-item\")]: {\n          [\"\".concat(componentCls, \"-item-extra\")]: {\n            marginInlineStart: marginLG\n          }\n        }\n      }\n    },\n    [\"@media screen and (max-width: \".concat(screenSM, \"px)\")]: {\n      [componentCls]: {\n        [\"\".concat(componentCls, \"-item\")]: {\n          flexWrap: 'wrap',\n          [\"\".concat(componentCls, \"-action\")]: {\n            marginInlineStart: marginSM\n          }\n        }\n      },\n      [\"\".concat(componentCls, \"-vertical\")]: {\n        [\"\".concat(componentCls, \"-item\")]: {\n          flexWrap: 'wrap-reverse',\n          [\"\".concat(componentCls, \"-item-main\")]: {\n            minWidth: token.contentWidth\n          },\n          [\"\".concat(componentCls, \"-item-extra\")]: {\n            margin: \"auto auto \".concat(unit(margin))\n          }\n        }\n      }\n    }\n  };\n};\n// =============================== Base ===============================\nconst genBaseStyle = token => {\n  const {\n    componentCls,\n    antCls,\n    controlHeight,\n    minHeight,\n    paddingSM,\n    marginLG,\n    padding,\n    itemPadding,\n    colorPrimary,\n    itemPaddingSM,\n    itemPaddingLG,\n    paddingXS,\n    margin,\n    colorText,\n    colorTextDescription,\n    motionDurationSlow,\n    lineWidth,\n    headerBg,\n    footerBg,\n    emptyTextPadding,\n    metaMarginBottom,\n    avatarMarginRight,\n    titleMarginBottom,\n    descriptionFontSize\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'relative',\n      '*': {\n        outline: 'none'\n      },\n      [\"\".concat(componentCls, \"-header\")]: {\n        background: headerBg\n      },\n      [\"\".concat(componentCls, \"-footer\")]: {\n        background: footerBg\n      },\n      [\"\".concat(componentCls, \"-header, \").concat(componentCls, \"-footer\")]: {\n        paddingBlock: paddingSM\n      },\n      [\"\".concat(componentCls, \"-pagination\")]: {\n        marginBlockStart: marginLG,\n        // https://github.com/ant-design/ant-design/issues/20037\n        [\"\".concat(antCls, \"-pagination-options\")]: {\n          textAlign: 'start'\n        }\n      },\n      [\"\".concat(componentCls, \"-spin\")]: {\n        minHeight,\n        textAlign: 'center'\n      },\n      [\"\".concat(componentCls, \"-items\")]: {\n        margin: 0,\n        padding: 0,\n        listStyle: 'none'\n      },\n      [\"\".concat(componentCls, \"-item\")]: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        padding: itemPadding,\n        color: colorText,\n        [\"\".concat(componentCls, \"-item-meta\")]: {\n          display: 'flex',\n          flex: 1,\n          alignItems: 'flex-start',\n          maxWidth: '100%',\n          [\"\".concat(componentCls, \"-item-meta-avatar\")]: {\n            marginInlineEnd: avatarMarginRight\n          },\n          [\"\".concat(componentCls, \"-item-meta-content\")]: {\n            flex: '1 0',\n            width: 0,\n            color: colorText\n          },\n          [\"\".concat(componentCls, \"-item-meta-title\")]: {\n            margin: \"0 0 \".concat(unit(token.marginXXS), \" 0\"),\n            color: colorText,\n            fontSize: token.fontSize,\n            lineHeight: token.lineHeight,\n            '> a': {\n              color: colorText,\n              transition: \"all \".concat(motionDurationSlow),\n              '&:hover': {\n                color: colorPrimary\n              }\n            }\n          },\n          [\"\".concat(componentCls, \"-item-meta-description\")]: {\n            color: colorTextDescription,\n            fontSize: descriptionFontSize,\n            lineHeight: token.lineHeight\n          }\n        },\n        [\"\".concat(componentCls, \"-item-action\")]: {\n          flex: '0 0 auto',\n          marginInlineStart: token.marginXXL,\n          padding: 0,\n          fontSize: 0,\n          listStyle: 'none',\n          '& > li': {\n            position: 'relative',\n            display: 'inline-block',\n            padding: \"0 \".concat(unit(paddingXS)),\n            color: colorTextDescription,\n            fontSize: token.fontSize,\n            lineHeight: token.lineHeight,\n            textAlign: 'center',\n            '&:first-child': {\n              paddingInlineStart: 0\n            }\n          },\n          [\"\".concat(componentCls, \"-item-action-split\")]: {\n            position: 'absolute',\n            insetBlockStart: '50%',\n            insetInlineEnd: 0,\n            width: lineWidth,\n            height: token.calc(token.fontHeight).sub(token.calc(token.marginXXS).mul(2)).equal(),\n            transform: 'translateY(-50%)',\n            backgroundColor: token.colorSplit\n          }\n        }\n      },\n      [\"\".concat(componentCls, \"-empty\")]: {\n        padding: \"\".concat(unit(padding), \" 0\"),\n        color: colorTextDescription,\n        fontSize: token.fontSizeSM,\n        textAlign: 'center'\n      },\n      [\"\".concat(componentCls, \"-empty-text\")]: {\n        padding: emptyTextPadding,\n        color: token.colorTextDisabled,\n        fontSize: token.fontSize,\n        textAlign: 'center'\n      },\n      // ============================ without flex ============================\n      [\"\".concat(componentCls, \"-item-no-flex\")]: {\n        display: 'block'\n      }\n    }),\n    [\"\".concat(componentCls, \"-grid \").concat(antCls, \"-col > \").concat(componentCls, \"-item\")]: {\n      display: 'block',\n      maxWidth: '100%',\n      marginBlockEnd: margin,\n      paddingBlock: 0,\n      borderBlockEnd: 'none'\n    },\n    [\"\".concat(componentCls, \"-vertical \").concat(componentCls, \"-item\")]: {\n      alignItems: 'initial',\n      [\"\".concat(componentCls, \"-item-main\")]: {\n        display: 'block',\n        flex: 1\n      },\n      [\"\".concat(componentCls, \"-item-extra\")]: {\n        marginInlineStart: marginLG\n      },\n      [\"\".concat(componentCls, \"-item-meta\")]: {\n        marginBlockEnd: metaMarginBottom,\n        [\"\".concat(componentCls, \"-item-meta-title\")]: {\n          marginBlockStart: 0,\n          marginBlockEnd: titleMarginBottom,\n          color: colorText,\n          fontSize: token.fontSizeLG,\n          lineHeight: token.lineHeightLG\n        }\n      },\n      [\"\".concat(componentCls, \"-item-action\")]: {\n        marginBlockStart: padding,\n        marginInlineStart: 'auto',\n        '> li': {\n          padding: \"0 \".concat(unit(padding)),\n          '&:first-child': {\n            paddingInlineStart: 0\n          }\n        }\n      }\n    },\n    [\"\".concat(componentCls, \"-split \").concat(componentCls, \"-item\")]: {\n      borderBlockEnd: \"\".concat(unit(token.lineWidth), \" \").concat(token.lineType, \" \").concat(token.colorSplit),\n      '&:last-child': {\n        borderBlockEnd: 'none'\n      }\n    },\n    [\"\".concat(componentCls, \"-split \").concat(componentCls, \"-header\")]: {\n      borderBlockEnd: \"\".concat(unit(token.lineWidth), \" \").concat(token.lineType, \" \").concat(token.colorSplit)\n    },\n    [\"\".concat(componentCls, \"-split\").concat(componentCls, \"-empty \").concat(componentCls, \"-footer\")]: {\n      borderTop: \"\".concat(unit(token.lineWidth), \" \").concat(token.lineType, \" \").concat(token.colorSplit)\n    },\n    [\"\".concat(componentCls, \"-loading \").concat(componentCls, \"-spin-nested-loading\")]: {\n      minHeight: controlHeight\n    },\n    [\"\".concat(componentCls, \"-split\").concat(componentCls, \"-something-after-last-item \").concat(antCls, \"-spin-container > \").concat(componentCls, \"-items > \").concat(componentCls, \"-item:last-child\")]: {\n      borderBlockEnd: \"\".concat(unit(token.lineWidth), \" \").concat(token.lineType, \" \").concat(token.colorSplit)\n    },\n    [\"\".concat(componentCls, \"-lg \").concat(componentCls, \"-item\")]: {\n      padding: itemPaddingLG\n    },\n    [\"\".concat(componentCls, \"-sm \").concat(componentCls, \"-item\")]: {\n      padding: itemPaddingSM\n    },\n    // Horizontal\n    [\"\".concat(componentCls, \":not(\").concat(componentCls, \"-vertical)\")]: {\n      [\"\".concat(componentCls, \"-item-no-flex\")]: {\n        [\"\".concat(componentCls, \"-item-action\")]: {\n          float: 'right'\n        }\n      }\n    }\n  };\n};\nexport const prepareComponentToken = token => ({\n  contentWidth: 220,\n  itemPadding: \"\".concat(unit(token.paddingContentVertical), \" 0\"),\n  itemPaddingSM: \"\".concat(unit(token.paddingContentVerticalSM), \" \").concat(unit(token.paddingContentHorizontal)),\n  itemPaddingLG: \"\".concat(unit(token.paddingContentVerticalLG), \" \").concat(unit(token.paddingContentHorizontalLG)),\n  headerBg: 'transparent',\n  footerBg: 'transparent',\n  emptyTextPadding: token.padding,\n  metaMarginBottom: token.padding,\n  avatarMarginRight: token.padding,\n  titleMarginBottom: token.paddingSM,\n  descriptionFontSize: token.fontSize\n});\n// ============================== Export ==============================\nexport default genStyleHooks('List', token => {\n  const listToken = mergeToken(token, {\n    listBorderedCls: \"\".concat(token.componentCls, \"-bordered\"),\n    minHeight: token.controlHeightLG\n  });\n  return [genBaseStyle(listToken), genBorderedStyle(listToken), genResponsiveStyle(listToken)];\n}, prepareComponentToken);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}