{"ast":null,"code":"import { unit } from '@ant-design/cssinjs';\nimport { genFocusStyle } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nimport genMotionStyle from './motion';\n// =============================== Base ===============================\nconst genDrawerStyle = token => {\n  const {\n    borderRadiusSM,\n    componentCls,\n    zIndexPopup,\n    colorBgMask,\n    colorBgElevated,\n    motionDurationSlow,\n    motionDurationMid,\n    paddingXS,\n    padding,\n    paddingLG,\n    fontSizeLG,\n    lineHeightLG,\n    lineWidth,\n    lineType,\n    colorSplit,\n    marginXS,\n    colorIcon,\n    colorIconHover,\n    colorBgTextHover,\n    colorBgTextActive,\n    colorText,\n    fontWeightStrong,\n    footerPaddingBlock,\n    footerPaddingInline,\n    calc\n  } = token;\n  const wrapperCls = \"\".concat(componentCls, \"-content-wrapper\");\n  return {\n    [componentCls]: {\n      position: 'fixed',\n      inset: 0,\n      zIndex: zIndexPopup,\n      pointerEvents: 'none',\n      color: colorText,\n      '&-pure': {\n        position: 'relative',\n        background: colorBgElevated,\n        display: 'flex',\n        flexDirection: 'column',\n        [\"&\".concat(componentCls, \"-left\")]: {\n          boxShadow: token.boxShadowDrawerLeft\n        },\n        [\"&\".concat(componentCls, \"-right\")]: {\n          boxShadow: token.boxShadowDrawerRight\n        },\n        [\"&\".concat(componentCls, \"-top\")]: {\n          boxShadow: token.boxShadowDrawerUp\n        },\n        [\"&\".concat(componentCls, \"-bottom\")]: {\n          boxShadow: token.boxShadowDrawerDown\n        }\n      },\n      '&-inline': {\n        position: 'absolute'\n      },\n      // ====================== Mask ======================\n      [\"\".concat(componentCls, \"-mask\")]: {\n        position: 'absolute',\n        inset: 0,\n        zIndex: zIndexPopup,\n        background: colorBgMask,\n        pointerEvents: 'auto'\n      },\n      // ==================== Content =====================\n      [wrapperCls]: {\n        position: 'absolute',\n        zIndex: zIndexPopup,\n        maxWidth: '100vw',\n        transition: \"all \".concat(motionDurationSlow),\n        '&-hidden': {\n          display: 'none'\n        }\n      },\n      // Placement\n      [\"&-left > \".concat(wrapperCls)]: {\n        top: 0,\n        bottom: 0,\n        left: {\n          _skip_check_: true,\n          value: 0\n        },\n        boxShadow: token.boxShadowDrawerLeft\n      },\n      [\"&-right > \".concat(wrapperCls)]: {\n        top: 0,\n        right: {\n          _skip_check_: true,\n          value: 0\n        },\n        bottom: 0,\n        boxShadow: token.boxShadowDrawerRight\n      },\n      [\"&-top > \".concat(wrapperCls)]: {\n        top: 0,\n        insetInline: 0,\n        boxShadow: token.boxShadowDrawerUp\n      },\n      [\"&-bottom > \".concat(wrapperCls)]: {\n        bottom: 0,\n        insetInline: 0,\n        boxShadow: token.boxShadowDrawerDown\n      },\n      [\"\".concat(componentCls, \"-content\")]: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '100%',\n        height: '100%',\n        overflow: 'auto',\n        background: colorBgElevated,\n        pointerEvents: 'auto'\n      },\n      // Header\n      [\"\".concat(componentCls, \"-header\")]: {\n        display: 'flex',\n        flex: 0,\n        alignItems: 'center',\n        padding: \"\".concat(unit(padding), \" \").concat(unit(paddingLG)),\n        fontSize: fontSizeLG,\n        lineHeight: lineHeightLG,\n        borderBottom: \"\".concat(unit(lineWidth), \" \").concat(lineType, \" \").concat(colorSplit),\n        '&-title': {\n          display: 'flex',\n          flex: 1,\n          alignItems: 'center',\n          minWidth: 0,\n          minHeight: 0\n        }\n      },\n      [\"\".concat(componentCls, \"-extra\")]: {\n        flex: 'none'\n      },\n      [\"\".concat(componentCls, \"-close\")]: Object.assign({\n        display: 'inline-flex',\n        width: calc(fontSizeLG).add(paddingXS).equal(),\n        height: calc(fontSizeLG).add(paddingXS).equal(),\n        borderRadius: borderRadiusSM,\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginInlineEnd: marginXS,\n        color: colorIcon,\n        fontWeight: fontWeightStrong,\n        fontSize: fontSizeLG,\n        fontStyle: 'normal',\n        lineHeight: 1,\n        textAlign: 'center',\n        textTransform: 'none',\n        textDecoration: 'none',\n        background: 'transparent',\n        border: 0,\n        cursor: 'pointer',\n        transition: \"all \".concat(motionDurationMid),\n        textRendering: 'auto',\n        '&:hover': {\n          color: colorIconHover,\n          backgroundColor: colorBgTextHover,\n          textDecoration: 'none'\n        },\n        '&:active': {\n          backgroundColor: colorBgTextActive\n        }\n      }, genFocusStyle(token)),\n      [\"\".concat(componentCls, \"-title\")]: {\n        flex: 1,\n        margin: 0,\n        fontWeight: token.fontWeightStrong,\n        fontSize: fontSizeLG,\n        lineHeight: lineHeightLG\n      },\n      // Body\n      [\"\".concat(componentCls, \"-body\")]: {\n        flex: 1,\n        minWidth: 0,\n        minHeight: 0,\n        padding: paddingLG,\n        overflow: 'auto',\n        [\"\".concat(componentCls, \"-body-skeleton\")]: {\n          width: '100%',\n          height: '100%',\n          display: 'flex',\n          justifyContent: 'center'\n        }\n      },\n      // Footer\n      [\"\".concat(componentCls, \"-footer\")]: {\n        flexShrink: 0,\n        padding: \"\".concat(unit(footerPaddingBlock), \" \").concat(unit(footerPaddingInline)),\n        borderTop: \"\".concat(unit(lineWidth), \" \").concat(lineType, \" \").concat(colorSplit)\n      },\n      // ====================== RTL =======================\n      '&-rtl': {\n        direction: 'rtl'\n      }\n    }\n  };\n};\nexport const prepareComponentToken = token => ({\n  zIndexPopup: token.zIndexPopupBase,\n  footerPaddingBlock: token.paddingXS,\n  footerPaddingInline: token.padding\n});\n// ============================== Export ==============================\nexport default genStyleHooks('Drawer', token => {\n  const drawerToken = mergeToken(token, {});\n  return [genDrawerStyle(drawerToken), genMotionStyle(drawerToken)];\n}, prepareComponentToken);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}